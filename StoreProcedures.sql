USE [GESTION_HUMANA_HITSS]
GO
/****** Object:  StoredProcedure [AUDITORIA].[GUARDA_ERROR]    Script Date: 05/20/2019 10:36:32 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Julio Fuentes>
-- Create date: <4/02//2019>
-- Description:	<GUARDA LOS ERRORES DEL SISTEMA DE GESTRION HUMANA>
-- =============================================
CREATE PROCEDURE [AUDITORIA].[GUARDA_ERROR]
@COD_ERROR INT,
@FECHA DATETIME,
@NOMBRE_CLASE VARCHAR(50),
@NOMBRE_METODO VARCHAR(50),
@CODIGO_ERROR VARCHAR(20),
@DETALLE VARCHAR(MAX)

AS
BEGIN
 
     INSERT INTO AUDITORIAS.ERRORES
         (
	  NOMBRE_CLASE,
	  NOMBRE_METODO,
	  CODIGO_ERROR,
	  DETALLE
	   )
	VALUES(
	  @NOMBRE_CLASE,
	  @NOMBRE_METODO,
	  @CODIGO_ERROR,
	  @DETALLE
	  )
     SELECT * FROM AUDITORIAS.ERRORES WHERE @COD_ERROR = @@IDENTITY; 
END
GO
/****** Object:  StoredProcedure [AUDITORIA].[GUARDA_DEPURARCION]    Script Date: 05/20/2019 10:36:32 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Julio Fuentes>
-- Create date: <4/02//2019>
-- Description:	<GUARDA LA TRAZA DEL LOG DEL SISTEMA DE GESTRION HUMANA>
-- =============================================
CREATE PROCEDURE [AUDITORIA].[GUARDA_DEPURARCION]
@COD_ERROR int,
@FECHA DATETIME,
@NOMBRE_CLASE VARCHAR(50),
@NOMBRE_METODO VARCHAR(50),
@CODIGO_ERROR VARCHAR(20),
@DETALLE VARCHAR(MAX)

AS
BEGIN
 
     INSERT INTO AUDITORIAS.DEPURARCION 
         (
	  NOMBRE_CLASE,
	  NOMBRE_METODO,
	  CODIGO_ERROR,
	  DETALLE
	   )
	VALUES(
	  @NOMBRE_CLASE,
	  @NOMBRE_METODO,
	  @CODIGO_ERROR,
	  @DETALLE
	  )
     SELECT * FROM AUDITORIAS.DEPURARCION WHERE @COD_ERROR= @@IDENTITY; 
END
GO
/****** Object:  StoredProcedure [CONFIGURACIONES].[CONSULTAR_TIPO_CORREO_PO_COD_TIPO]    Script Date: 05/20/2019 10:36:32 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Julio Fuentes>
-- Create date: <21/02/2019>
-- Description:	<CONSULTA TIPO DE CORREO POR CODIGO>
-- =============================================
CREATE PROCEDURE [CONFIGURACIONES].[CONSULTAR_TIPO_CORREO_PO_COD_TIPO]-- RETIROS.CONSULTAR_TIPO_CORREO_PO_COD_TIPO
@COD_TIPO numeric(18,0)
AS
BEGIN 
    SELECT  *
    FROM   CONFIGURACIONES.TIPOS_CORREOS
	WHERE COD_TIPO_CORREO=@COD_TIPO
END
GO
/****** Object:  StoredProcedure [CONFIGURACIONES].[CONSULTAR_TIPO_CORREO]    Script Date: 05/20/2019 10:36:32 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Julio Fuentes>
-- Create date: <21/02/2019>
-- Description:	<CONSULTA EL TIPO DE CORREO>
-- =============================================
CREATE PROCEDURE [CONFIGURACIONES].[CONSULTAR_TIPO_CORREO] --  RETIROS.CONSULTAR_TIPO_CORREO
AS
BEGIN 
    SELECT  *
    FROM   CONFIGURACIONES.TIPOS_CORREOS
END
GO
/****** Object:  StoredProcedure [REQUISICION].[CONSULTAR_ESTADOS]    Script Date: 05/20/2019 10:36:32 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Claro Colombia (Silvia Roa P.)
-- Create date: 08/05/2019
-- Description: CONSULTA TODOS LOS ESTADOS
-- =============================================
CREATE PROCEDURE [REQUISICION].[CONSULTAR_ESTADOS]

AS

BEGIN
	SET NOCOUNT ON;
	DECLARE @MSG_ERROR VARCHAR(MAX)
	BEGIN TRY

		SELECT  E.COD_ESTADO_REQUISICION, E.NOMBRE_ESTADO
		FROM  [REQUISICION].[ESTADO] E

	END TRY

	BEGIN CATCH
		SET @MSG_ERROR = ERROR_MESSAGE()
		RAISERROR('SE HA PRODUCIDO UN ERROR: %s',16,1,@MSG_ERROR)
	END CATCH
END
GO
/****** Object:  StoredProcedure [REQUISICION].[CONSULTAR_TIPOS_REQUISICION]    Script Date: 05/20/2019 10:36:33 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Claro Colombia (Silvia Roa P.)
-- Create date: 08/05/2019
-- Description: CONSULTA TODOS LOS TIPOS DE REQUISICION EN ESTADO ACTIVO
-- =============================================
CREATE PROCEDURE [REQUISICION].[CONSULTAR_TIPOS_REQUISICION]

AS

BEGIN
	SET NOCOUNT ON;
	DECLARE @MSG_ERROR VARCHAR(MAX)
	BEGIN TRY

		SELECT  TR.COD_TIPO_REQUISICION, TR.NOMBRE_REQUISICION
		FROM  [REQUISICION].[TIPO] TR
		WHERE TR.ESTADO = 1

	END TRY

	BEGIN CATCH
		SET @MSG_ERROR = ERROR_MESSAGE()
		RAISERROR('SE HA PRODUCIDO UN ERROR: %s',16,1,@MSG_ERROR)
	END CATCH
END
GO
/****** Object:  StoredProcedure [REQUISICION].[CONSULTAR_TIPOS_NECESIDAD]    Script Date: 05/20/2019 10:36:33 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Claro Colombia (Silvia Roa P.)
-- Create date: 08/05/2019
-- Description: CONSULTA TODOS LOS TIPOS DE NECESIDAD EN ESTADO ACTIVO
-- =============================================
CREATE PROCEDURE [REQUISICION].[CONSULTAR_TIPOS_NECESIDAD]

AS

BEGIN
	SET NOCOUNT ON;
	DECLARE @MSG_ERROR VARCHAR(MAX)
	BEGIN TRY

		SELECT  TN.COD_TIPO_NECESIDAD, TN.NOMBRE_NECESIDAD
		FROM  [REQUISICION].[TIPO_NECESIDAD] TN
		WHERE TN.ESTADO = 1

	END TRY

	BEGIN CATCH
		SET @MSG_ERROR = ERROR_MESSAGE()
		RAISERROR('SE HA PRODUCIDO UN ERROR: %s',16,1,@MSG_ERROR)
	END CATCH
END
GO
/****** Object:  StoredProcedure [RETIROS].[APROBAR_RETIRO_POR_SOPORTE]    Script Date: 05/20/2019 10:36:33 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Julio Fuentes>
-- Create date: <24/01/2019>
-- Description:	< APRUEBA EL SOPORTE >
-- =============================================
CREATE PROCEDURE [RETIROS].[APROBAR_RETIRO_POR_SOPORTE]
 @COD_RETIRO numeric(18, 0), 
 @APROBADO bit, 
 @COD_USUARIO_MODIFICA nvarchar(128),
 @ESTADO_RETIRO varchar(128)
AS
BEGIN
 IF	(@ESTADO_RETIRO='Registrado')
 BEGIN
    UPDATE RETIROS.RETIROS
	     SET	
		 FECHA_MODIFICA = GETDATE(), 	
		 APROBADO = @APROBADO, 
		 COD_USUARIO_MODIFICA = @COD_USUARIO_MODIFICA, 
		 COD_ESTADO_RETIRO = 2 
         WHERE COD_RETIRO= @COD_RETIRO
				
    SELECT * FROM RETIROS.RETIROS WHERE COD_RETIRO = @COD_RETIRO; 
	END

	IF	(@ESTADO_RETIRO='Documentos Aprobados')
    BEGIN
    UPDATE RETIROS.RETIROS
	     SET	
		 FECHA_MODIFICA = GETDATE(), 	
		 APROBADO = @APROBADO, 
		 COD_USUARIO_MODIFICA = @COD_USUARIO_MODIFICA, 
		 COD_ESTADO_RETIRO = 1 
         WHERE COD_RETIRO= @COD_RETIRO
				
    SELECT * FROM RETIROS.RETIROS WHERE COD_RETIRO = @COD_RETIRO; 
	END
END
GO
/****** Object:  StoredProcedure [RETIROS].[APROBAR_RETIRO]    Script Date: 05/20/2019 10:36:33 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Julio Fuentes>
-- Create date: <24/01/2019>
-- Description:	< APRUEBA EL SOPORTE >
-- =============================================
CREATE PROCEDURE [RETIROS].[APROBAR_RETIRO]
 @COD_RETIRO numeric(18, 0), 
 @APROBADO bit, 
 @COD_USUARIO_MODIFICA nvarchar(128),
 @ESTADO_RETIRO varchar(128)
AS
BEGIN
  SET NOCOUNT ON;
  BEGIN TRY    
       
       BEGIN TRAN 

 IF	(@ESTADO_RETIRO='Registrado')
 BEGIN
    UPDATE RETIROS.RETIROS
	     SET	
		 FECHA_MODIFICA = GETDATE(), 	
		 APROBADO = @APROBADO, 
		 COD_USUARIO_MODIFICA = @COD_USUARIO_MODIFICA, 
		 COD_ESTADO_RETIRO = 2 
         WHERE COD_RETIRO= @COD_RETIRO
				
    SELECT * FROM RETIROS.RETIROS WHERE COD_RETIRO = @COD_RETIRO; 
	END

	IF	(@ESTADO_RETIRO='Documentos Aprobados')
    BEGIN
    UPDATE RETIROS.RETIROS
	     SET	
		 FECHA_MODIFICA = GETDATE(), 	
		 APROBADO = @APROBADO, 
		 COD_USUARIO_MODIFICA = @COD_USUARIO_MODIFICA, 
		 COD_ESTADO_RETIRO = 1 
         WHERE COD_RETIRO= @COD_RETIRO
				
    SELECT * FROM RETIROS.RETIROS WHERE COD_RETIRO = @COD_RETIRO; 
	END

       COMMIT  TRAN        
       
       END TRY
       BEGIN CATCH

       rollback 

  --select 'Error'ERROR
       END CATCH    
       
END
GO
/****** Object:  StoredProcedure [RETIROS].[ACTUALIZAR_RETIRO]    Script Date: 05/20/2019 10:36:33 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Julio Fuentes>
-- Create date: <22/01/2019>
-- Description:	<ACTUALIZA,EDITA RETIRO >
-- =============================================
CREATE  PROCEDURE [RETIROS].[ACTUALIZAR_RETIRO] 
 @COD_RETIRO numeric(18, 0),
 @NUMERO_DOCUMENTO nvarchar(50),
 @NOMBRE nvarchar(200),
 @USUARIO nvarchar(50),
 @COD_CARGO numeric(18, 0),
 @NOMBRE_CARGO nvarchar(80),
 @COD_CAUSA_RETIRO numeric(18, 0),
 @NOMBRE_CAUSA_RETIRO nvarchar(100),
 @FECHA_RETIRO date,
 @GENERA_VACANTE bit,
 @COMENTARIOS nvarchar(MAX),
 @APROBADO bit,
 @COD_ESTADO_RETIRO numeric(1, 0),
 @ESTADO numeric(1, 0),
 @COD_USUARIO_CREA nvarchar(128),
 @FECHA_CREA datetime,
 @COD_USUARIO_MODIFICA nvarchar(128),
 @FECHA_MODIFICA datetime


AS
BEGIN
    UPDATE RETIROS.RETIROS
	      SET				
				COD_CAUSA_RETIRO=@COD_CAUSA_RETIRO,
				NOMBRE_CAUSA_RETIRO=@NOMBRE_CAUSA_RETIRO,
				FECHA_RETIRO=@FECHA_RETIRO,
				GENERA_VACANTE=@GENERA_VACANTE,
				COMENTARIOS=@COMENTARIOS,
				COD_ESTADO_RETIRO=@COD_ESTADO_RETIRO,	
				ESTADO = @ESTADO, 	
				COD_USUARIO_MODIFICA= @COD_USUARIO_MODIFICA,
				FECHA_MODIFICA= @FECHA_MODIFICA
					
         WHERE COD_RETIRO= @COD_RETIRO			
				
				
				
     SELECT * FROM RETIROS.RETIROS WHERE COD_RETIRO = @COD_RETIRO; 
END
GO
/****** Object:  StoredProcedure [REQUISICION].[CONSULTA_PRINCIPALXUSUARIO_CODREQUISICION]    Script Date: 05/20/2019 10:36:32 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [REQUISICION].[CONSULTA_PRINCIPALXUSUARIO_CODREQUISICION]
@COD_USUARIO varchar(256),
@Usuario varchar(50)=NULL,
@COD_ESTADO_REQUISICION int =NULL
AS
BEGIN	
declare @id_Rol varchar(256)
set @Id_Rol = (SELECT top 1 RoleId FROM  [dbo].[AspNetUserRoles] where userid = @COD_USUARIO)
  
	SELECT distinct	R.COD_REQUISICION,R.COD_ESTADO_REQUISICION,R.USUARIO_CREACION, R.EMAIL_USUARIO_CREACION, R.COD_CARGO, R.NOMBRE_CARGO, 
			R.COD_TIPO_REQUISICION, TR.NOMBRE_REQUISICION, R.FECHA_CREACION, E.NOMBRE_ESTADO, E.Color	 
		FROM [REQUISICION].[REQUISICION] R 
		inner join [REQUISICION].[ROL_REQUISICION] RR on RR.ID_ROL = @id_Rol AND RR.COD_ESTADO_REQUISICION=R.COD_ESTADO_REQUISICION
		INNER JOIN [REQUISICION].[TIPO] TR ON R.COD_TIPO_REQUISICION = TR.COD_TIPO_REQUISICION 
		INNER JOIN [REQUISICION].[ESTADO] E ON R.COD_ESTADO_REQUISICION = E.COD_ESTADO_REQUISICION
		Where R.USUARIO_CREACION = ISNULL(@Usuario,R.USUARIO_CREACION) AND  R.COD_ESTADO_REQUISICION LIKE ISNULL(@COD_ESTADO_REQUISICION,R.COD_ESTADO_REQUISICION)
		ORDER BY FECHA_CREACION DESC
END
GO
/****** Object:  StoredProcedure [CONFIGURACIONES].[CONSULTAR_CORREO_POR_COD_CORREO]    Script Date: 05/20/2019 10:36:32 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Julio Fuentes>
-- Create date: <21/02/2019>
-- Description:	<CONSULTA CORREOS POR COD_CORREO>
-- =============================================
CREATE PROCEDURE [CONFIGURACIONES].[CONSULTAR_CORREO_POR_COD_CORREO]  --  RETIROS.CONSULTAR_CORREO_POR_COD_CORREO 
@COD_CORREO NUMERIC(18,0)
AS
BEGIN 
    SELECT  *
    FROM   CONFIGURACIONES.CORREOS 
	WHERE COD_CORREO=@COD_CORREO	     
END
GO
/****** Object:  StoredProcedure [CONFIGURACIONES].[CONSULTAR_CORREO]    Script Date: 05/20/2019 10:36:32 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Julio Fuentes>
-- Create date: <21/02/2019>
-- Description:	<CONSULTA RETIROS>
-- =============================================
CREATE PROCEDURE [CONFIGURACIONES].[CONSULTAR_CORREO]  --  RETIROS.CONSULTAR_CORREO
AS
BEGIN 
    SELECT  *
    FROM   CONFIGURACIONES.CORREOS 	     
END
GO
/****** Object:  StoredProcedure [RETIROS].[CONSULTAR_TIPO_RETIRO]    Script Date: 05/20/2019 10:36:33 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Julio Fuentes>
-- Create date: <24/01/2019>
-- Description:	< CONSULTA TIPO RETIRO POR DODIGO DE LA CAUSA RETIRO SI SON REQUERIDOS >
-- =============================================
CREATE PROCEDURE [RETIROS].[CONSULTAR_TIPO_RETIRO] --RETIROS.CONSULTAR_TIPO_RETIRO 1
 @COD_CAUSA_RETIRO numeric(18, 0)
AS
BEGIN
	select RCR.*, RTS.NOMBRE
	from  REFERENCIAS.CAUSA_RETIROS_TIPO_SOPORTES AS RCR INNER JOIN
			REFERENCIAS.TIPO_SOPORTES AS RTS ON  RTS.COD_TIPO_SOPORTE=RCR.COD_TIPO_SOPORTE
	WHERE RCR.COD_CAUSA_RETIRO= @COD_CAUSA_RETIRO
				
  
END
GO
/****** Object:  StoredProcedure [RETIROS].[CONSULTAR_RETIROS_PRUEBA]    Script Date: 05/20/2019 10:36:33 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Julio Fuentes>
-- Create date: <18/01/2019>
-- Description:	<CONSULTA RETIROS>
-- =============================================
CREATE PROCEDURE [RETIROS].[CONSULTAR_RETIROS_PRUEBA] --  execute RETIROS.CONSULTAR_RETIROS 'Jefe', NULL, NULL
AS
BEGIN
  BEGIN
 
        SELECT  *
        FROM RETIROS.RETIROS 
	     
  END
 
  	
END
GO
/****** Object:  StoredProcedure [RETIROS].[CONSULTAR_RETIROS]    Script Date: 05/20/2019 10:36:33 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROCEDURE [RETIROS].[CONSULTAR_RETIROS] --RETIROS.CONSULTAR_RETIROS_CESNUN 'JEFE,BP', NULL, 'CESNUN'
@ROL NVARCHAR(100),
@VALOR nvarchar(200)=null, 
@USUARIO NVARCHAR(128) = null
AS
BEGIN


        SELECT  *
        FROM RETIROS.RETIROS  
		WHERE CHARINDEX('Jefe',@ROL) > 0 AND ESTADO = 1  AND 
		 (COD_USUARIO_CREA = @USUARIO AND 
		 ((USUARIO LIKE '%'+@VALOR+'%') OR 
		 (NOMBRE LIKE '%'+@VALOR+'%') OR
	   	 (NUMERO_DOCUMENTO like'%'+@VALOR+'%') OR
		 (@VALOR IS NULL)))
UNION  
        SELECT  *
        FROM RETIROS.RETIROS
        WHERE (CHARINDEX('BP',@ROL) > 0) AND ESTADO = 1  AND 
		(COD_ESTADO_RETIRO IN ( 2, 3 , 4) 
		AND (
		 (USUARIO LIKE '%'+@VALOR+'%') OR 
		 (NOMBRE LIKE '%'+@VALOR+'%') OR
	   	 (NUMERO_DOCUMENTO like'%'+@VALOR+'%') OR
		 (@VALOR IS NULL)))
UNION  		
        SELECT  *
        FROM RETIROS.RETIROS
		WHERE  CHARINDEX('Proveedor',@ROL) > 0 AND ESTADO = 1  AND 
		(COD_ESTADO_RETIRO IN ( 1, 2 ) 
		AND (
		(USUARIO LIKE '%'+@VALOR+'%') OR 
		 (NOMBRE LIKE '%'+@VALOR+'%') OR
	   	 (NUMERO_DOCUMENTO like'%'+@VALOR+'%') OR
		 (@VALOR IS NULL)))
		ORDER BY FECHA_CREA DESC
	
END
GO
/****** Object:  StoredProcedure [RETIROS].[CONSULTAR_RETIRO_POR_COD_RETIRO]    Script Date: 05/20/2019 10:36:33 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Julio Fuentes>
-- Create date: <21/01/2019>
-- Description:	<CONSULTA RETIRO POR ID COD_RETIRO>
-- =============================================
CREATE PROCEDURE [RETIROS].[CONSULTAR_RETIRO_POR_COD_RETIRO] --RETIROS.CONSULTAR_RETIRO_POR_COD_RETIRO 1
 @COD_RETIRO numeric(18, 0)
AS
BEGIN

        SELECT  *
        FROM RETIROS.RETIROS
		WHERE COD_RETIRO= @COD_RETIRO
		ORDER BY 1 DESC
	
END
GO
/****** Object:  StoredProcedure [REQUISICION].[CONSULTAR_REQUISICIONXID]    Script Date: 05/20/2019 10:36:33 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Claro Colombia (Silvia Roa P.)
-- Create date: 08/05/2019
-- Description:	Consulta una requisicion por ID
-- =============================================
CREATE PROCEDURE [REQUISICION].[CONSULTAR_REQUISICIONXID]
	@IDREQUISICION INT
AS

BEGIN
	SET NOCOUNT ON;
		DECLARE @MSG_ERROR VARCHAR(MAX)
	BEGIN TRY
		SELECT COD_REQUISICION,COD_TIPO_NECESIDAD,COD_CARGO,NOMBRE_CARGO,ORDEN,COD_CECO,NOMBRE_CECO
			  ,COD_TIPO_REQUISICION,FECHA_INICIO,FECHA_FIN,ES_MODIFICACION,OBSERVACION,COD_ESTADO_REQUISICION,USUARIO_CREACION
			  ,FECHA_CREACION,USUARIO_MODIFICACION,FECHA_MODIFICACION,COD_GERENCIA,NOMBRE_GERENCIA,COD_TIPO_CONTRATO,NOMBRE_TIPO_CONTRATO
			  ,COD_TIPO_DOCUMENTO,NUMERO_DOCUMENTO_EMPLEADO,NOMBRE_EMPLEADO,JEFE_INMEDIATO,COD_SOCIEDAD,NOMBRE_SOCIEDAD,COD_EQUIPO_VENTAS
			  ,NOMBRE_EQUIPO_VENTAS,COD_CIUDAD_TRABAJO,NOMBRE_CIUDAD_TRABAJO,COD_DANE_CIUDAD_TRABAJO,COD_UBICACION_FISICA,NOMBRE_UBICACION_FISICA
			  ,COD_NIVEL_RIESGO_ARL,NIVEL_RIESGO_ARL,COD_CATEGORIA_ED,NOMBRE_CATEGORIA_ED,CARGO_CRITICO,COD_JORNADA_LABORAL,NOMBRE_JORNADA_LABORAL
			  ,HORARIO_LABORAL_DESDE,HORARIO_LABORAL_HASTA,COD_DIA_LABORAL_DESDE,COD_DIA_LABORAL_HASTA,POSICION,EMPRESA_TEMPORAL,SALARIO_FIJO
			  ,PORCENTAJE_SALARIO_FIJO,SALARIO_VARIABLE,PORCENTAJE_SALARIO_VARIABLE,SOBREREMUNERACION,PORCENTAJE_SOBREREMUNERACION,EXTRA_FIJA
			  ,RECARGO_NOCTURNO,MEDIO_TRANSPORTE,SALARIO_TOTAL,BONO_ANUAL,NUMERO_SALARIOS,MESES_GARANTIZADOS,COD_TIPO_SALARIO,NOMBRE_TIPO_SALARIO
			  ,FACTOR_PRESTACIONAL,INGRESO_PROM_MENSUAL,INGRESO_PROM_ANUAL,MERCADO,COD_CATEGORIA,NOMBRE_CATEGORIA,PUNTO_MEDIO_80,PUNTO_MEDIO_100
			  ,PUNTO_MEDIO_120,POSICIONAMIENTO,EMAIL_USUARIO_CREACION,LOGIN_EMPLEADO
		  FROM [REQUISICION].[REQUISICION] R
		WHERE R.[COD_REQUISICION]= ISNULL(@IDREQUISICION,R.[COD_REQUISICION])
	END TRY

	BEGIN CATCH
		SET @MSG_ERROR = ERROR_MESSAGE() 
		RAISERROR ('SE HA PRODUCIDO UN ERROR : %s',16,1,@MSG_ERROR)
	END CATCH
END

--EXEC [REQUISICION].[CONSULTAR_REQUISICIONXID] 5
GO
/****** Object:  StoredProcedure [REQUISICION].[CONSULTAR_REQUISICIONES_RRHH]    Script Date: 05/20/2019 10:36:33 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Claro Colombia (Silvia Roa P.)
-- Create date: 10/05/2019
-- Description:	LISTAR LAS REQUISICIONES DISPONIBLES PARA RECURSOS HUMANOS
-- =============================================
CREATE PROCEDURE [REQUISICION].[CONSULTAR_REQUISICIONES_RRHH] 

AS
BEGIN
	SET NOCOUNT ON;
	DECLARE @MSG_ERROR VARCHAR(MAX)
	BEGIN TRY

		SELECT	R.USUARIO_CREACION, R.EMAIL_USUARIO_CREACION, R.COD_CARGO, R.NOMBRE_CARGO, 
				R.COD_TIPO_REQUISICION, TR.NOMBRE_REQUISICION, R.FECHA_CREACION, E.COD_ESTADO_REQUISICION,E.NOMBRE_ESTADO 	 
		FROM	[REQUISICION].[REQUISICION] R 
			LEFT OUTER JOIN [REQUISICION].[TIPO] TR ON R.COD_TIPO_REQUISICION = TR.COD_TIPO_REQUISICION
			LEFT OUTER JOIN [REQUISICION].[ESTADO] E ON R.COD_ESTADO_REQUISICION = E.COD_ESTADO_REQUISICION
		WHERE R.COD_ESTADO_REQUISICION = (SELECT E.COD_ESTADO_REQUISICION FROM [REQUISICION].[ESTADO] E 
										  WHERE E.NOMBRE_ESTADO = 'Verificada BP')
		ORDER BY FECHA_CREACION DESC	
	END TRY

	BEGIN CATCH
		SET @MSG_ERROR = ERROR_MESSAGE()
		RAISERROR('SE HA PRODUCIDO UN ERROR: %s',16,1,@MSG_ERROR)
	END CATCH
END

--EXEC [REQUISICION].[CONSULTAR_REQUISICIONES_RRHH]
--SELECT * FROM [REQUISICION].[ESTADO]
GO
/****** Object:  StoredProcedure [REQUISICION].[CONSULTAR_REQUISICIONES_JEFE]    Script Date: 05/20/2019 10:36:33 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Claro Colombia (Silvia Roa P.)
-- Create date: 06/05/2019
-- Description:	CONSULTA LAS REQUISICIONES CREADAS POR EL ROL JEFE
-- =============================================
CREATE PROCEDURE [REQUISICION].[CONSULTAR_REQUISICIONES_JEFE] 

AS
BEGIN
	SET NOCOUNT ON;
	DECLARE @MSG_ERROR VARCHAR(MAX)
	BEGIN TRY
		SELECT	R.USUARIO_CREACION, R.EMAIL_USUARIO_CREACION, R.COD_CARGO, R.NOMBRE_CARGO, 
				R.COD_TIPO_REQUISICION, TR.NOMBRE_REQUISICION, R.FECHA_CREACION, E.NOMBRE_ESTADO 	 
		FROM	[REQUISICION].[REQUISICION] R 
			LEFT OUTER JOIN [REQUISICION].[TIPO] TR ON R.COD_TIPO_REQUISICION = TR.COD_TIPO_REQUISICION
			LEFT OUTER JOIN [REQUISICION].[ESTADO] E ON R.COD_ESTADO_REQUISICION = E.COD_ESTADO_REQUISICION
		ORDER BY FECHA_CREACION DESC	
	END TRY

	BEGIN CATCH
		SET @MSG_ERROR = ERROR_MESSAGE()
		RAISERROR('SE HA PRODUCIDO UN ERROR: %s',16,1,@MSG_ERROR)
	END CATCH
END

--EXEC [REQUISICION].[CONSULTAR_REQUISICIONES_JEFE]
GO
/****** Object:  StoredProcedure [REQUISICION].[CONSULTAR_REQUISICIONES_FILTRO]    Script Date: 05/20/2019 10:36:32 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [REQUISICION].[CONSULTAR_REQUISICIONES_FILTRO] 
	
AS
DECLARE @OPCION_FILTRO int
BEGIN
	IF @OPCION_FILTRO = 1 
		BEGIN 
			SELECT	R.USUARIO_CREACION, R.EMAIL_USUARIO_CREACION, R.COD_CARGO, R.NOMBRE_CARGO, 
					TR.NOMBRE_REQUISICION, R.FECHA_CREACION, E.NOMBRE_ESTADO 			 
			FROM	[REQUISICION].[REQUISICION] R 
					INNER JOIN [REQUISICION].[TIPO] TR ON R.COD_TIPO_REQUISICION = TR.COD_TIPO_REQUISICION
					INNER JOIN [REQUISICION].[ESTADO] E ON R.COD_ESTADO_REQUISICION = E.COD_ESTADO_REQUISICION
			WHERE R.COD_ESTADO_REQUISICION IN (SELECT COD_ESTADO_REQUISICION 
											  FROM [REQUISICION].[ESTADO] E
											  WHERE E.NOMBRE_ESTADO NOT IN ('Finalizada', 'Rechazado')) 
			ORDER BY FECHA_CREACION DESC
		END

	ELSE IF @OPCION_FILTRO = 2
		BEGIN
			SELECT	R.USUARIO_CREACION, R.EMAIL_USUARIO_CREACION, R.COD_CARGO, R.NOMBRE_CARGO, 
					TR.NOMBRE_REQUISICION, R.FECHA_CREACION, E.NOMBRE_ESTADO 			 
			FROM	[REQUISICION].[REQUISICION] R 
					INNER JOIN [REQUISICION].[TIPO] TR ON R.COD_TIPO_REQUISICION = TR.COD_TIPO_REQUISICION
					INNER JOIN [REQUISICION].[ESTADO] E ON R.COD_ESTADO_REQUISICION = E.COD_ESTADO_REQUISICION
			WHERE R.COD_ESTADO_REQUISICION = (SELECT COD_ESTADO_REQUISICION 
											  FROM [REQUISICION].[ESTADO] E
											  WHERE E.NOMBRE_ESTADO = 'Finalizada') 
			ORDER BY FECHA_CREACION DESC
		END
	
	ELSE IF @OPCION_FILTRO = 3
		BEGIN
			SELECT	R.USUARIO_CREACION, R.EMAIL_USUARIO_CREACION, R.COD_CARGO, R.NOMBRE_CARGO, 
					TR.NOMBRE_REQUISICION, R.FECHA_CREACION, E.NOMBRE_ESTADO 			 
			FROM	[REQUISICION].[REQUISICION] R 
					INNER JOIN [REQUISICION].[TIPO] TR ON R.COD_TIPO_REQUISICION = TR.COD_TIPO_REQUISICION
					INNER JOIN [REQUISICION].[ESTADO] E ON R.COD_ESTADO_REQUISICION = E.COD_ESTADO_REQUISICION
			WHERE R.COD_ESTADO_REQUISICION = (SELECT COD_ESTADO_REQUISICION 
											  FROM [REQUISICION].[ESTADO] E
											  WHERE E.NOMBRE_ESTADO = 'Rechazado')
			ORDER BY FECHA_CREACION DESC
		END
	
END
GO
/****** Object:  StoredProcedure [REQUISICION].[CONSULTAR_REQUISICIONES_CONTROLLER]    Script Date: 05/20/2019 10:36:32 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Claro Colombia (Silvia Roa P.)
-- Create date: 10/05/2019
-- Description:	LISTAR LAS REQUISICIONES DISPONIBLES PARA CONTROLLER
-- =============================================
CREATE PROCEDURE [REQUISICION].[CONSULTAR_REQUISICIONES_CONTROLLER] 

AS
BEGIN
	SET NOCOUNT ON;
	DECLARE @MSG_ERROR VARCHAR(MAX)
		
	BEGIN TRY

		SELECT	R.USUARIO_CREACION, R.EMAIL_USUARIO_CREACION, R.COD_CARGO, R.NOMBRE_CARGO, 
				R.COD_TIPO_REQUISICION, TR.NOMBRE_REQUISICION, R.FECHA_CREACION, E.COD_ESTADO_REQUISICION,E.NOMBRE_ESTADO 	 
		FROM	[REQUISICION].[REQUISICION] R 
			LEFT OUTER JOIN [REQUISICION].[TIPO] TR ON R.COD_TIPO_REQUISICION = TR.COD_TIPO_REQUISICION
			LEFT OUTER JOIN [REQUISICION].[ESTADO] E ON R.COD_ESTADO_REQUISICION = E.COD_ESTADO_REQUISICION
		WHERE R.COD_ESTADO_REQUISICION = (SELECT E.COD_ESTADO_REQUISICION FROM [REQUISICION].[ESTADO] E 
										  WHERE E.NOMBRE_ESTADO = 'Registrada')
		ORDER BY FECHA_CREACION DESC
	END TRY	

	BEGIN CATCH
		SET @MSG_ERROR = ERROR_MESSAGE()
		RAISERROR('SE HA PRODUCIDO UN ERROR: %s',16,1,@MSG_ERROR)
	END CATCH
END

--EXEC [REQUISICION].[CONSULTAR_REQUISICIONES_CONTROLLER]
--SELECT * FROM [REQUISICION].[ESTADO]
GO
/****** Object:  StoredProcedure [REQUISICION].[CONSULTAR_REQUISICIONES_BP]    Script Date: 05/20/2019 10:36:32 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Claro Colombia (Silvia Roa P.)
-- Create date: 10/05/2019
-- Description:	LISTAR LAS REQUISICIONES DISPONIBLES PARA BP
-- =============================================
CREATE PROCEDURE [REQUISICION].[CONSULTAR_REQUISICIONES_BP] 

AS
BEGIN
	SET NOCOUNT ON;
	DECLARE @MSG_ERROR VARCHAR(MAX)

	BEGIN TRY
		SELECT	R.USUARIO_CREACION, R.EMAIL_USUARIO_CREACION, R.COD_CARGO, R.NOMBRE_CARGO, 
				R.COD_TIPO_REQUISICION, TR.NOMBRE_REQUISICION, R.FECHA_CREACION, E.COD_ESTADO_REQUISICION,E.NOMBRE_ESTADO 	 
		FROM	[REQUISICION].[REQUISICION] R 
			LEFT OUTER JOIN [REQUISICION].[TIPO] TR ON R.COD_TIPO_REQUISICION = TR.COD_TIPO_REQUISICION
			LEFT OUTER JOIN [REQUISICION].[ESTADO] E ON R.COD_ESTADO_REQUISICION = E.COD_ESTADO_REQUISICION
		WHERE R.COD_ESTADO_REQUISICION = (SELECT E.COD_ESTADO_REQUISICION FROM [REQUISICION].[ESTADO] E 
										  WHERE E.NOMBRE_ESTADO = 'Aprobada Controller')
		ORDER BY FECHA_CREACION DESC	
	END TRY

	BEGIN CATCH
		SET @MSG_ERROR = ERROR_MESSAGE()
		RAISERROR('SE HA PRODUCIDO UN ERROR: %s',16,1,@MSG_ERROR)
	END CATCH
END

--EXEC [REQUISICION].[CONSULTAR_REQUISICIONES_BP]
--SELECT * FROM [REQUISICION].[ESTADO]
GO
/****** Object:  StoredProcedure [RETIROS].[ELIMINAR_RETIRO]    Script Date: 05/20/2019 10:36:33 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROCEDURE [RETIROS].[ELIMINAR_RETIRO]
 @COD_RETIRO numeric(18, 0)
AS
BEGIN
    UPDATE RETIROS.RETIROS
	      SET	
		  FECHA_MODIFICA = GETDATE(), 	
			ESTADO = 3
         WHERE COD_RETIRO= @COD_RETIRO
				
    
END
GO
/****** Object:  StoredProcedure [RETIROS].[CONSULTAR_SOPORTE_VERIFICA_REQUERIDO]    Script Date: 05/20/2019 10:36:33 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Julio Fuentes>
-- Create date: <13/02/2019>
-- Description:	< CONSULTA SOPORTE POR PARA EXTRAER EL REQUERIDO >
-- =============================================
CREATE PROCEDURE [RETIROS].[CONSULTAR_SOPORTE_VERIFICA_REQUERIDO] --RETIROS.CONSULTAR_SOPORTE_VERIFICA_REQUERIDO 1,1	

 @COD_TIPO_SOPORTE numeric(18, 0),
 @COD_CAUSA_RETIRO numeric(18, 0)

AS
BEGIN
 --  SELECT RS.*,RC.REQUERIDO 
	--FROM RETIROS.SOPORTES AS RS INNER JOIN 
	--	REFERENCIAS.CAUSA_RETIROS_TIPO_SOPORTES AS  RC  ON RS.COD_TIPO_SOPORTE=RC.COD_TIPO_SOPORTE
	SELECT * FROM REFERENCIAS.CAUSA_RETIROS_TIPO_SOPORTES

	WHERE 
	   COD_TIPO_SOPORTE=@COD_TIPO_SOPORTE 
	  AND COD_CAUSA_RETIRO= @COD_CAUSA_RETIRO

	ORDER BY 1 DESC		
END


--SELECT * FROM REFERENCIAS.CAUSA_RETIROS_TIPO_SOPORTES
--WHERE COD_TIPO_SOPORTE=1 AND COD_CAUSA_RETIRO=1
GO
/****** Object:  StoredProcedure [RETIROS].[CREAR_RETIRO]    Script Date: 05/20/2019 10:36:33 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Julio Fuentes>
-- Create date: <21/01/2019>
-- Description:	<INSERTA RETIRO >
-- =============================================
CREATE  PROCEDURE [RETIROS].[CREAR_RETIRO] --
 --@COD_RETIRO numeric(18, 0),
 @NUMERO_DOCUMENTO nvarchar(50),
 @NOMBRE nvarchar(200),
 @USUARIO nvarchar(50),
 @COD_CARGO numeric(18, 0),
 @NOMBRE_CARGO nvarchar(80),
 @COD_CAUSA_RETIRO numeric(18, 0),
 @NOMBRE_CAUSA_RETIRO nvarchar(100),
 @FECHA_RETIRO date,
 @GENERA_VACANTE bit,
 @COMENTARIOS nvarchar(MAX),
 @APROBADO bit,
 @COD_ESTADO_RETIRO numeric(1, 0),
 @ESTADO numeric(1, 0),
 @COD_USUARIO_CREA nvarchar(128),
 @FECHA_CREA datetime,
 @COD_USUARIO_MODIFICA nvarchar(128),
@FECHA_MODIFICA datetime


AS
BEGIN
    INSERT INTO RETIROS.RETIROS
	            (
				NUMERO_DOCUMENTO,
				NOMBRE,
				USUARIO,
				COD_CARGO,
				NOMBRE_CARGO,
				COD_CAUSA_RETIRO,
				NOMBRE_CAUSA_RETIRO,
				FECHA_RETIRO,
				GENERA_VACANTE,
				COMENTARIOS,
				APROBADO,
				COD_ESTADO_RETIRO ,
				ESTADO,
				COD_USUARIO_CREA,
				COD_USUARIO_MODIFICA
				)
				VALUES
				(
			    @NUMERO_DOCUMENTO,
				@NOMBRE,
				@USUARIO,
				@COD_CARGO,
				@NOMBRE_CARGO,
				@COD_CAUSA_RETIRO,
				@NOMBRE_CAUSA_RETIRO,
				@FECHA_RETIRO,
				@GENERA_VACANTE,
				@COMENTARIOS,
				@APROBADO,
				@COD_ESTADO_RETIRO ,
				@ESTADO,
				@COD_USUARIO_CREA,
				@COD_USUARIO_CREA
				)	

				SELECT * FROM RETIROS.RETIROS WHERE COD_RETIRO = @@IDENTITY; 
END
GO
/****** Object:  StoredProcedure [CONFIGURACIONES].[CREAR_CORREO]    Script Date: 05/20/2019 10:36:32 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Julio Fuentes>
-- Create date: <21/02/2019>
-- Description:	<CREA CORREO >
-- =============================================
CREATE  PROCEDURE [CONFIGURACIONES].[CREAR_CORREO]
--@COD_CORREO numeric(18,0),
@COD_TIPO_CORREO numeric(18,0),
@SERVIDOR_SMTP nvarchar(100),
@CUENTA_CORREO nvarchar(100),
@CUENTA nvarchar(100),
@SALTO nvarchar(100),
@IV nvarchar(100),
@CONTRASENA nvarchar(100),
@ES_HTML bit,
@USA_SSL bit,
@ESTADO numeric(1,0),
@COD_USUARIO_CREA nvarchar(128),
@FECHA_CREA datetime,
@COD_USUARIO_MODIFICA nvarchar(128),
@FECHA_MODIFICA datetime
AS
BEGIN
    INSERT INTO CONFIGURACIONES.CORREOS
	            (
				  COD_TIPO_CORREO,
				  SERVIDOR_SMTP,
				  CUENTA_CORREO,
				  CUENTA,
				  SALTO,
				  IV,
				  CONTRASENA,
				  ES_HTML,
				  USA_SSL,				 
				  COD_USUARIO_CREA,				
				  COD_USUARIO_MODIFICA		 
				)
				VALUES
				(			
				  @COD_TIPO_CORREO,
				  @SERVIDOR_SMTP,
				  @CUENTA_CORREO,
				  @CUENTA,
				  @SALTO,
				  @IV,
				  @CONTRASENA,
				  @ES_HTML,
				  @USA_SSL,				
				  @COD_USUARIO_CREA,				
				  @COD_USUARIO_MODIFICA	
				)	

				SELECT * FROM CONFIGURACIONES.CORREOS WHERE COD_CORREO = @@IDENTITY; 
END
GO
/****** Object:  StoredProcedure [RETIROS].[FINALIZAR_RETIRO]    Script Date: 05/20/2019 10:36:33 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Julio Fuentes>
-- Create date: <28/02/2019>
-- Description:	< APRUEBA EL SOPORTE >
-- =============================================
CREATE PROCEDURE [RETIROS].[FINALIZAR_RETIRO]
 @COD_RETIRO numeric(18, 0),
 @COD_USUARIO_MODIFICA nvarchar(128)
AS
BEGIN
  SET NOCOUNT ON;
  BEGIN TRY    
       
       BEGIN TRAN 
    UPDATE RETIROS.RETIROS
	     SET	
		 FECHA_MODIFICA = GETDATE(), 
		 COD_USUARIO_MODIFICA = @COD_USUARIO_MODIFICA, 
		 COD_ESTADO_RETIRO = 4 
         WHERE COD_RETIRO= @COD_RETIRO
				
    SELECT * FROM RETIROS.RETIROS WHERE COD_RETIRO = @COD_RETIRO; 
	

       COMMIT  TRAN        
       
       END TRY
       BEGIN CATCH

       rollback 

  --select 'Error'ERROR
       END CATCH    
       
END
GO
/****** Object:  StoredProcedure [RETIROS].[OBTENER_ARCHIVO_SOPORTE]    Script Date: 05/20/2019 10:36:33 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Julio Fuentes>
-- Create date: <24/01/2019>
-- Description:	< OBTINE ARCHIVO SOPORTE >
-- =============================================
CREATE PROCEDURE [RETIROS].[OBTENER_ARCHIVO_SOPORTE] --RETIROS.OBTENER_ARCHIVO_SOPORTE 12
 @COD_SOPORTE numeric(18, 0)
AS
BEGIN
       --SELECT  COD_TIPO_SOPORTE,RUTA_SOPORTE,NOMBRE_SOPORTE 
	   select *
       FROM  RETIROS.SOPORTES
       WHERE COD_SOPORTE = @COD_SOPORTE
				
  
END
GO
/****** Object:  StoredProcedure [REQUISICION].[INSERTAR_REQUISICION]    Script Date: 05/20/2019 10:36:33 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Claro Colombia (Silvia Roa P.)
-- Create date: 06/05/2019
-- Description:	INSERTA UNA NUEVA REQUISICION Y SU HISTORICO
-- =============================================
CREATE PROCEDURE [REQUISICION].[INSERTAR_REQUISICION]         
	 @COD_TIPO_NECESIDAD int
	,@COD_TIPO_REQUISICION int
	,@COD_CARGO int
	,@NOMBRE_CARGO varchar(100) = null
	,@ORDEN varchar(100) = null
	,@COD_CECO int  = null
	,@NOMBRE_CECO varchar(100)  = null
	,@OBSERVACION varchar(200)  = null
	,@COD_TIPO_DOCUMENTO int  = null
	,@NUMERO_DOCUMENTO_EMPLEADO varchar(50)  = null
	,@NOMBRE_EMPLEADO varchar(100)  = null
	,@FECHA_INICIO date  = null
	,@FECHA_FIN date  = null
	,@COD_GERENCIA int  = null
	,@NOMBRE_GERENCIA varchar(100)  = null
	,@COD_SOCIEDAD int  = null
	,@NOMBRE_SOCIEDAD varchar(100)  = null
	,@COD_EQUIPO_VENTAS int  = null
	,@NOMBRE_EQUIPO_VENTAS varchar(100)  = null
	,@COD_CATEGORIA_ED int  = null
	,@NOMBRE_CATEGORIA_ED varchar(100)  = null
	,@CARGO_CRITICO bit  = null
	,@POSICION varchar(100) = null
	,@SALARIO_FIJO numeric  = null
	,@PORCENTAJE_SALARIO_FIJO numeric  = null
	,@SALARIO_VARIABLE numeric  = null
	,@PORCENTAJE_SALARIO_VARIABLE numeric  = null
	,@SOBREREMUNERACION numeric  = null
	,@EXTRA_FIJA numeric  = null
	,@RECARGO_NOCTURNO numeric  = null
	,@MEDIO_TRANSPORTE numeric  = null
	,@SALARIO_TOTAL numeric  = null
	,@BONO_ANUAL numeric  = null
	,@NUMERO_SALARIOS int  = null
	,@COD_NIVEL_RIESGO_ARL int = null	
	,@COD_JORNADA_LABORAL int = null
	,@HORARIO_LABORAL_DESDE int = null
	,@HORARIO_LABORAL_HASTA int = null
	,@COD_DIA_LABORAL_DESDE int = null
	,@COD_DIA_LABORAL_HASTA int = null
	,@PORCENTAJE_SOBREREMUNERACION int = null
	,@MESES_GARANTIZADOS int = null
	,@COD_TIPO_SALARIO int = null
	,@FACTOR_PRESTACIONAL varchar(50) = null
	,@INGRESO_PROM_MENSUAL numeric = null
	,@INGRESO_PROM_ANUAL numeric = null
	,@MERCADO varchar(50) = null
	,@COD_CATEGORIA int = null 
	,@PUNTO_MEDIO_80 numeric = null
	,@PUNTO_MEDIO_100 numeric = null
	,@PUNTO_MEDIO_120 numeric = null
	,@POSICIONAMIENTO varchar(50) = null	
	,@USUARIO varchar(50)
	,@COD_ESTADO int = 1
AS 

DECLARE @COD_REQUISICION int
DECLARE @COD_ROL int 
DECLARE @SIGUIENTE_ESTADO int

BEGIN
	SET NOCOUNT ON;
	DECLARE @MSG_ERROR VARCHAR(MAX)

	BEGIN TRY
		SELECT @COD_ROL = COD_ROL FROM [REQUISICION].[ROL] WHERE NOMBRE = 'Jefe' --El unico rol que inserta es el jefe
		SELECT @SIGUIENTE_ESTADO = E.COD_ESTADO_REQUISICION FROM [REQUISICION].[ESTADO] E WHERE E.NOMBRE_ESTADO = 'Registrada' -- Se guarda el id del siguiente Registrado

		BEGIN TRAN
			--Valida que el tipo de requisicion que viene (Presupuestada)
			IF @COD_TIPO_REQUISICION = (SELECT T.COD_TIPO_REQUISICION FROM [REQUISICION].[TIPO] T
										WHERE T.DESCRIPCION = 'Presupuestada')
				BEGIN
					INSERT INTO [REQUISICION].[REQUISICION] (COD_TIPO_NECESIDAD,COD_CARGO,NOMBRE_CARGO,ORDEN,COD_CECO,NOMBRE_CECO,COD_TIPO_REQUISICION
															,COD_ESTADO_REQUISICION,USUARIO_CREACION,FECHA_CREACION)
					VALUES (@COD_TIPO_NECESIDAD,@COD_CARGO,@NOMBRE_CARGO,@ORDEN,@COD_CECO,@NOMBRE_CECO,@COD_TIPO_REQUISICION,@SIGUIENTE_ESTADO,
							@USUARIO,GETDATE())
					--Obtiene el codigo del registro creado para guardarlo en el historico
					SELECT @COD_REQUISICION = MAX(COD_REQUISICION) FROM [REQUISICION].[REQUISICION] 

					INSERT INTO [REQUISICION].[HISTORICO] (COD_REQUISICION,COD_ROL,USUARIO_REGISTRO,FECHA_REGISTRO,COD_ESTADO)
					VALUES (@COD_REQUISICION,@COD_ROL,@USUARIO,GETDATE(),@SIGUIENTE_ESTADO)
				END
			--Valida que el tipo de requisicion que viene (No Presupuestada)
			ELSE IF @COD_TIPO_REQUISICION = (SELECT T.COD_TIPO_REQUISICION FROM [REQUISICION].[TIPO] T
											 WHERE T.DESCRIPCION = 'No Presupuestada')
				BEGIN
					INSERT INTO [REQUISICION].[REQUISICION] (COD_TIPO_NECESIDAD,COD_CARGO,NOMBRE_CARGO,ORDEN,COD_TIPO_REQUISICION,OBSERVACION
																,COD_ESTADO_REQUISICION,USUARIO_CREACION,FECHA_CREACION)
					VALUES (@COD_TIPO_NECESIDAD,@COD_CARGO,@NOMBRE_CARGO,@ORDEN,@COD_TIPO_REQUISICION,@OBSERVACION,@SIGUIENTE_ESTADO,@USUARIO,GETDATE())
					--Obtiene el codigo del registro creado para guardarlo en el historico
					SELECT @COD_REQUISICION = MAX(COD_REQUISICION) FROM [REQUISICION].[REQUISICION] 

					INSERT INTO [REQUISICION].[HISTORICO] (COD_REQUISICION,COD_ROL,USUARIO_REGISTRO,FECHA_REGISTRO,COD_ESTADO)
					VALUES (@COD_REQUISICION,@COD_ROL,@USUARIO,GETDATE(),@SIGUIENTE_ESTADO)

				END
			--Valida que el tipo de requisicion que viene (Licencia)
			ELSE IF @COD_TIPO_REQUISICION = (SELECT T.COD_TIPO_REQUISICION FROM [REQUISICION].[TIPO] T
											 WHERE T.DESCRIPCION = 'Licencia')
				BEGIN
					INSERT INTO [REQUISICION].[REQUISICION] (COD_TIPO_DOCUMENTO,NUMERO_DOCUMENTO_EMPLEADO,NOMBRE_EMPLEADO,FECHA_INICIO,FECHA_FIN
																,COD_CARGO,NOMBRE_CARGO,COD_GERENCIA,NOMBRE_GERENCIA,COD_CECO,NOMBRE_CECO,COD_TIPO_NECESIDAD
																,COD_SOCIEDAD,NOMBRE_SOCIEDAD,COD_EQUIPO_VENTAS,NOMBRE_EQUIPO_VENTAS,COD_CATEGORIA_ED
																,NOMBRE_CATEGORIA_ED,CARGO_CRITICO,POSICION,SALARIO_FIJO,PORCENTAJE_SALARIO_FIJO
																,SALARIO_VARIABLE,PORCENTAJE_SALARIO_VARIABLE,SOBREREMUNERACION,EXTRA_FIJA,RECARGO_NOCTURNO
																,MEDIO_TRANSPORTE,SALARIO_TOTAL,BONO_ANUAL,NUMERO_SALARIOS,COD_TIPO_REQUISICION
																,OBSERVACION,COD_ESTADO_REQUISICION,USUARIO_CREACION,FECHA_CREACION)
				VALUES (@COD_TIPO_DOCUMENTO,@NUMERO_DOCUMENTO_EMPLEADO,@NOMBRE_EMPLEADO,@FECHA_INICIO,@FECHA_FIN,@COD_CARGO,@NOMBRE_CARGO,@COD_GERENCIA
						,@NOMBRE_GERENCIA,@COD_CECO,@NOMBRE_CECO,@COD_TIPO_NECESIDAD,@COD_SOCIEDAD,@NOMBRE_SOCIEDAD,@COD_EQUIPO_VENTAS,@NOMBRE_EQUIPO_VENTAS
						,@COD_CATEGORIA_ED,@NOMBRE_CATEGORIA_ED,@CARGO_CRITICO,@POSICION,@SALARIO_FIJO,@PORCENTAJE_SALARIO_FIJO,@SALARIO_VARIABLE
						,@PORCENTAJE_SALARIO_VARIABLE,@SOBREREMUNERACION,@EXTRA_FIJA,@RECARGO_NOCTURNO,@MEDIO_TRANSPORTE,@SALARIO_TOTAL,@BONO_ANUAL
						,@NUMERO_SALARIOS,@COD_TIPO_REQUISICION,@OBSERVACION,@SIGUIENTE_ESTADO,@USUARIO,GETDATE())
					--Obtiene el codigo del registro creado para guardarlo en el historico
					SELECT @COD_REQUISICION = MAX(COD_REQUISICION) FROM [REQUISICION].[REQUISICION] 

					INSERT INTO [REQUISICION].[HISTORICO]  (COD_REQUISICION,COD_ROL,COD_NIVEL_RIESGO_ARL,COD_CATEGORIA_ED,CARGO_CRITICO
																,COD_JORNADA_LABORAL,HORARIO_LABORAL_DESDE,HORARIO_LABORAL_HASTA,COD_DIA_LABORAL_DESDE
																,COD_DIA_LABORAL_HASTA,SALARIO_FIJO,PORCENTAJE_SALARIO_FIJO,SALARIO_VARIABLE
																,PORCENTAJE_SALARIO_VARIABLE,SOBREREMUNERACION,PORCENTAJE_SOBREREMUNERACION
																,EXTRA_FIJA,RECARGO_NOCTURNO,MEDIO_TRANSPORTE,SALARIO_TOTAL,BONO_ANUAL,NUMERO_SALARIOS
																,MESES_GARANTIZADOS,COD_TIPO_SALARIO,FACTOR_PRESTACIONAL,INGRESO_PROM_ANUAL
																,INGRESO_PROM_MENSUAL,MERCADO,COD_CATEGORIA,PUNTO_MEDIO_100,PUNTO_MEDIO_120,PUNTO_MEDIO_80
																,POSICIONAMIENTO,USUARIO_REGISTRO,FECHA_REGISTRO,COD_ESTADO)
					VALUES (@COD_REQUISICION,@COD_ROL,@COD_NIVEL_RIESGO_ARL,@COD_CATEGORIA_ED,@CARGO_CRITICO,@COD_JORNADA_LABORAL
							,@HORARIO_LABORAL_DESDE,@HORARIO_LABORAL_HASTA,@COD_DIA_LABORAL_DESDE,@COD_DIA_LABORAL_HASTA,@SALARIO_FIJO
							,@PORCENTAJE_SALARIO_FIJO,@SALARIO_VARIABLE,@PORCENTAJE_SALARIO_VARIABLE,@SOBREREMUNERACION,@PORCENTAJE_SOBREREMUNERACION
							,@EXTRA_FIJA,@RECARGO_NOCTURNO,@MEDIO_TRANSPORTE,@SALARIO_TOTAL,@BONO_ANUAL,@NUMERO_SALARIOS,@MESES_GARANTIZADOS,@COD_TIPO_SALARIO
							,@FACTOR_PRESTACIONAL,@INGRESO_PROM_MENSUAL,@INGRESO_PROM_ANUAL,@MERCADO,@COD_CATEGORIA,@PUNTO_MEDIO_100,@PUNTO_MEDIO_120,@PUNTO_MEDIO_80
							,@POSICIONAMIENTO,@USUARIO,GETDATE(),@COD_ESTADO)
				END			
		COMMIT		
	END TRY
	BEGIN CATCH
		ROLLBACK
		SET @MSG_ERROR = ERROR_MESSAGE()
		RAISERROR('SE HA PRODUCIDO UN ERROR: %s',16,1,@MSG_ERROR)
	END CATCH
END
GO
/****** Object:  StoredProcedure [REQUISICION].[INSERTAR_HISTORICO]    Script Date: 05/20/2019 10:36:33 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Claro Colombia (Silvia Roa P.)
-- Create date: 06/05/2019
-- Description:	INSERTA UNA NUEVA REQUISICION RETORNANDO EL ID INGRESADO
-- =============================================
CREATE PROCEDURE [REQUISICION].[INSERTAR_HISTORICO]         
	 @ULTIMO_ID int
	,@COD_ROL int
	,@COD_CARGO int = null
	,@COD_CATEGORIA_ED int  = null
	,@CARGO_CRITICO bit  = null
	,@POSICION varchar(100) = null
	,@SALARIO_FIJO numeric  = null
	,@PORCENTAJE_SALARIO_FIJO numeric  = null
	,@SALARIO_VARIABLE numeric  = null
	,@PORCENTAJE_SALARIO_VARIABLE numeric  = null
	,@SOBREREMUNERACION numeric  = null
	,@EXTRA_FIJA numeric  = null
	,@RECARGO_NOCTURNO numeric  = null
	,@MEDIO_TRANSPORTE numeric  = null
	,@SALARIO_TOTAL numeric  = null
	,@BONO_ANUAL numeric  = null
	,@NUMERO_SALARIOS int  = null
	,@COD_NIVEL_RIESGO_ARL int = null	
	,@COD_JORNADA_LABORAL int = null
	,@HORARIO_LABORAL_DESDE int = null
	,@HORARIO_LABORAL_HASTA int = null
	,@COD_DIA_LABORAL_DESDE int = null
	,@COD_DIA_LABORAL_HASTA int = null
	,@PORCENTAJE_SOBREREMUNERACION int = null
	,@MESES_GARANTIZADOS int = null
	,@COD_TIPO_SALARIO int = null
	,@FACTOR_PRESTACIONAL varchar(50) = null
	,@INGRESO_PROM_MENSUAL numeric = null
	,@INGRESO_PROM_ANUAL numeric = null
	,@MERCADO varchar(50) = null
	,@COD_CATEGORIA int = null 
	,@PUNTO_MEDIO_80 numeric = null
	,@PUNTO_MEDIO_100 numeric = null
	,@PUNTO_MEDIO_120 numeric = null
	,@POSICIONAMIENTO varchar(50) = null
	,@USUARIO varchar(50)
	,@COD_ESTADO int = null
AS
BEGIN
	SET NOCOUNT ON;
	DECLARE @MSG_ERROR VARCHAR(MAX)
	BEGIN TRY
		INSERT INTO [REQUISICION].[HISTORICO] 
		VALUES (@ULTIMO_ID --COD_REQUISICION
				,@COD_ROL 
				,@COD_NIVEL_RIESGO_ARL
				,@COD_CATEGORIA_ED
				,@CARGO_CRITICO
				,@COD_JORNADA_LABORAL
				,@HORARIO_LABORAL_DESDE
				,@HORARIO_LABORAL_HASTA
				,@COD_DIA_LABORAL_DESDE
				,@COD_DIA_LABORAL_HASTA
				,@SALARIO_FIJO
				,@PORCENTAJE_SALARIO_FIJO
				,@SALARIO_VARIABLE
				,@PORCENTAJE_SALARIO_VARIABLE
				,@SOBREREMUNERACION
				,@PORCENTAJE_SOBREREMUNERACION
				,@EXTRA_FIJA
				,@RECARGO_NOCTURNO
				,@MEDIO_TRANSPORTE
				,@SALARIO_TOTAL
				,@BONO_ANUAL
				,@NUMERO_SALARIOS
				,@MESES_GARANTIZADOS
				,@COD_TIPO_SALARIO
				,@FACTOR_PRESTACIONAL
				,@INGRESO_PROM_MENSUAL
				,@INGRESO_PROM_ANUAL
				,@MERCADO
				,@COD_CATEGORIA
				,@PUNTO_MEDIO_80
				,@PUNTO_MEDIO_100
				,@PUNTO_MEDIO_120
				,@POSICIONAMIENTO
				,@USUARIO --USUARIO_REGISTRO
				,getdate() --FECHA_REGISTRO
				,@COD_ESTADO)

		SELECT SCOPE_IDENTITY()
	END TRY

	BEGIN CATCH
		SET @MSG_ERROR = ERROR_MESSAGE()
		RAISERROR('SE HA PRODUCIDO UN ERROR: %s',16,1,@MSG_ERROR)
	END CATCH
END
		--INSERTA HISTORICO
GO
/****** Object:  StoredProcedure [REQUISICION].[INSERTAR_COMENTARIO]    Script Date: 05/20/2019 10:36:33 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Claro Colombia (Silvia Roa P.)
-- Create date: 09/05/2019
-- Description:	INSERTAR COMENTARIOS DE MODIFICACION
-- =============================================
CREATE PROCEDURE [REQUISICION].[INSERTAR_COMENTARIO]
	@COD_COMENTARIO INT
    ,@COD_REQUISICION INT
    ,@COD_ESTADO_REQUISICION INT
    ,@COMENTARIO_AUTORIZACION VARCHAR(200)
    ,@OBSERVACIONES VARCHAR(200)
    ,@COD_ROL INT
    ,@COD_USUARIO INT
    ,@USARIO_CREACION VARCHAR(100)
AS
BEGIN
	SET NOCOUNT ON;
	DECLARE @MSG_ERROR VARCHAR(MAX)
	
	BEGIN TRY
		BEGIN TRAN
			INSERT INTO [REQUISICION].[COMENTARIO] (COD_REQUISICION
														,COD_ESTADO_REQUISICION
														,COMENTARIO_AUTORIZACION
														,OBSERVACIONES
														,COD_ROL
														,COD_USUARIO
														,USARIO_CREACION
														,FECHA_CREACION)
			VALUES (@COD_REQUISICION 
				   ,@COD_ESTADO_REQUISICION 
				   ,@COMENTARIO_AUTORIZACION 
				   ,@OBSERVACIONES 
				   ,@COD_ROL 
				   ,@COD_USUARIO 
				   ,@USARIO_CREACION
				   ,GETDATE())
		COMMIT
	END TRY

	BEGIN CATCH
		SET @MSG_ERROR = ERROR_MESSAGE()
		RAISERROR('SE HA PRODUCIDO UN ERROR: %s',16,1,@MSG_ERROR)
	END CATCH
END
GO
/****** Object:  StoredProcedure [RETIROS].[CREAR_SOPORTE]    Script Date: 05/20/2019 10:36:33 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Julio Fuentes>
-- Create date: <25/01/2019>
-- Description:	<INSERTA SOPORTE >
-- =============================================
CREATE  PROCEDURE [RETIROS].[CREAR_SOPORTE]
 --@COD_SOPORTE(18, 0),
 @COD_RETIRO numeric(18, 0),
 @COD_TIPO_SOPORTE numeric(18, 0),
 @RUTA_SOPORTE nvarchar(MAX),
 @NOMBRE_SOPORTE nvarchar(200),
 @TAMANO  nvarchar(10),
 @APROBADO bit,
 @ESTADO numeric(1,0),
 @COD_USUARIO_CREA nvarchar(128),
 @FECHA_CREA datetime,
 @COD_USUARIO_MODIFICA nvarchar(128),
 @FECHA_MODIFICA datetime
AS
BEGIN
    INSERT INTO RETIROS.SOPORTES
	            (
				COD_RETIRO,
				COD_TIPO_SOPORTE,
				RUTA_SOPORTE,
				NOMBRE_SOPORTE,
				TAMANO,
				APROBADO,
				ESTADO,
				COD_USUARIO_CREA,
				FECHA_CREA,
				COD_USUARIO_MODIFICA,
				FECHA_MODIFICA
				)
				VALUES
				(
			    @COD_RETIRO,
				@COD_TIPO_SOPORTE,
				@RUTA_SOPORTE,
				@NOMBRE_SOPORTE,
				@TAMANO,
				@APROBADO,
				@ESTADO,
				@COD_USUARIO_CREA,
				@FECHA_CREA,
			    @COD_USUARIO_CREA,
				@FECHA_CREA
				)	

				SELECT * FROM RETIROS.SOPORTES WHERE COD_SOPORTE = @@IDENTITY; 
END
GO
/****** Object:  StoredProcedure [REQUISICION].[RECHAZAR_REQUISICION]    Script Date: 05/20/2019 10:36:33 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Claro Colombia (Silvia Roa P.)
-- Create date: 09/05/2019
-- Description:	RECHAZA UNA REQUISICION, CAMBIA EL ESTADO Y REGISTRA EL CAMBIO DE ESTADO EN EL HISTORICO
-- =============================================
CREATE PROCEDURE [REQUISICION].[RECHAZAR_REQUISICION] 
	@ROL_RECHAZADOR int,
	@COD_REQUISICION int,
	@USUARIO varchar(50)
AS
	
BEGIN
	SET NOCOUNT ON;
	DECLARE @MSG_ERROR VARCHAR(MAX)
	DECLARE @SIGUIENTE_ESTADO AS int = (SELECT E.COD_ESTADO_REQUISICION FROM [REQUISICION].[ESTADO] E
										WHERE E.NOMBRE_ESTADO = 'Rechazado')
	BEGIN TRY
		BEGIN TRAN
			IF @ROL_RECHAZADOR IN (2, 5, 7) --CONTROLLER 
				BEGIN 
					UPDATE [REQUISICION].[REQUISICION] 
					SET COD_ESTADO_REQUISICION = @SIGUIENTE_ESTADO 
					WHERE COD_REQUISICION = @COD_REQUISICION
				END

			INSERT INTO [REQUISICION].[HISTORICO] (COD_REQUISICION, COD_ROL, USUARIO_REGISTRO, FECHA_REGISTRO, COD_ESTADO)
			VALUES (@COD_REQUISICION, @ROL_RECHAZADOR, @USUARIO, GETDATE(), @SIGUIENTE_ESTADO)
		COMMIT
	END TRY

	BEGIN CATCH
		SET @MSG_ERROR = ERROR_MESSAGE()
		RAISERROR('SE HA PRODUCIDO UN ERROR: %s',16,1,@MSG_ERROR)
	END CATCH					
END
GO
/****** Object:  StoredProcedure [RETIROS].[CONSULTAR_SOPORTES_RETIRO]    Script Date: 05/20/2019 10:36:33 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [RETIROS].[CONSULTAR_SOPORTES_RETIRO]
	@COD_RETIRO NUMERIC(18)
AS 

BEGIN	

SELECT * FROM RETIROS.SOPORTES WHERE COD_RETIRO = @COD_RETIRO

END
GO
/****** Object:  StoredProcedure [RETIROS].[CONSULTAR_SOPORTE_POR_COD_SOPORTE]    Script Date: 05/20/2019 10:36:33 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Julio Fuentes>
-- Create date: <24/01/2019>
-- Description:	<CONSULTA SOPORTE POR CODIGO DEL RETIRO>
-- =============================================
CREATE PROCEDURE [RETIROS].[CONSULTAR_SOPORTE_POR_COD_SOPORTE] --CONSULTAR_SOPORTE_POR_COD_REIRO 1
 @COD_SOPORTE numeric(18, 0)
AS
BEGIN

        SELECT  *
        FROM RETIROS.SOPORTES
		WHERE COD_SOPORTE= @COD_SOPORTE
		ORDER BY 1 DESC
	
END
GO
/****** Object:  StoredProcedure [CONFIGURACIONES].[CONSULTAR_DESTINOS_POR_COD_CORREO]    Script Date: 05/20/2019 10:36:32 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Julio Fuentes>
-- Create date: <21/02/2019>
-- Description:	<CONSULTA LOS DESTINOS DEL CORREO POR CODIDO DE CORREO>
-- =============================================
CREATE PROCEDURE [CONFIGURACIONES].[CONSULTAR_DESTINOS_POR_COD_CORREO] --RETIROS.CONSULTAR_DESTINOS_POR_COD_CORREO 1
@COD_CORREO numeric(18,0)
AS
BEGIN 
    SELECT  *
    FROM   CONFIGURACIONES.CORREOS_DESTINOS
	WHERE COD_CORREO=@COD_CORREO
END
GO
/****** Object:  StoredProcedure [CONFIGURACIONES].[CONSULTAR_PLANTILLAS_POR_COD_CORREO]    Script Date: 05/20/2019 10:36:32 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Julio Fuentes>
-- Create date: <21/02/2019>
-- Description:	<CONSULTA LA PLANTILLA DEL CORREO POR CODIGO DE CORREO>
-- =============================================
CREATE PROCEDURE [CONFIGURACIONES].[CONSULTAR_PLANTILLAS_POR_COD_CORREO] --RETIROS.CONSULTAR_PLANTILLA_POR_COD_CORREO 1
@COD_CORREO numeric(18,0)
AS
BEGIN 
    SELECT  *
    FROM   CONFIGURACIONES.PLANTILLAS_CORREOS
	WHERE COD_CORREO=@COD_CORREO
END
GO
/****** Object:  StoredProcedure [REQUISICION].[CONSULTAR_COMENTARIO]    Script Date: 05/20/2019 10:36:32 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Claro Colombia (Silvia Roa P.)
-- Create date: 08/05/2019
-- Description: CONSULTA LOS COMENTARIOS DE MODIFICACION X REQUISICION
-- =============================================
CREATE PROCEDURE [REQUISICION].[CONSULTAR_COMENTARIO]
@COD_REQUISICION int
AS

BEGIN
	SET NOCOUNT ON;
	DECLARE @MSG_ERROR VARCHAR(MAX)
	BEGIN TRY

		SELECT  C.COD_COMENTARIO, C.COD_ESTADO_REQUISICION, C.COD_ROL, C.COD_USUARIO, C.COMENTARIO_AUTORIZACION
		FROM  [REQUISICION].[COMENTARIO] C
		WHERE C.COD_REQUISICION = @COD_REQUISICION

	END TRY

	BEGIN CATCH
		SET @MSG_ERROR = ERROR_MESSAGE()
		RAISERROR('SE HA PRODUCIDO UN ERROR: %s',16,1,@MSG_ERROR)
	END CATCH
END
GO
/****** Object:  StoredProcedure [RETIROS].[APROBAR_SOPORTE]    Script Date: 05/20/2019 10:36:33 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Julio Fuentes>
-- Create date: <24/01/2019>
-- Description:	< APRUEBA EL SOPORTE >
-- =============================================
CREATE PROCEDURE [RETIROS].[APROBAR_SOPORTE]
 @COD_SOPORTE numeric(18, 0), 
 @APROBADO bit, 
 @COD_USUARIO_MODIFICA nvarchar(128)
AS
BEGIN
    UPDATE RETIROS.SOPORTES
	     SET	
		 FECHA_MODIFICA = GETDATE(), 	
		 APROBADO = @APROBADO, 
		 COD_USUARIO_MODIFICA = @COD_USUARIO_MODIFICA
         WHERE COD_SOPORTE = @COD_SOPORTE
				
    SELECT * FROM RETIROS.SOPORTES WHERE COD_SOPORTE = @COD_SOPORTE 
END
GO
/****** Object:  StoredProcedure [REQUISICION].[ACTUALIZAR_REQUISICION]    Script Date: 05/20/2019 10:36:32 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Claro Colombia (Silvia Roa P.)
-- Create date: 09/05/2019
-- Description:	ACTUALIZA LOS DATOS DE UNA REQUISICION Y REGISTRA LOS CAMBIOS EN LA TABLA HISTORICA
-- =============================================
CREATE PROCEDURE [REQUISICION].[ACTUALIZAR_REQUISICION]
	@COD_REQUISICION int,
	@COD_TIPO_NECESIDAD int,
	@COD_CARGO int,
	@NOMBRE_CARGO nvarchar(80),
	@ORDEN varchar(80) = null,
	@COD_CECO varchar(100) = null,
	@NOMBRE_CECO varchar(100) = null,
	@COD_TIPO_REQUISICION int = null,
	@FECHA_INICIO datetime = null,
	@FECHA_FIN datetime = null,
	@ES_MODIFICACION bit = null,
	@OBSERVACION varchar(200) = null,
	@COD_ESTADO_REQUISICION int = null,
	@USUARIO_MODIFICACION varchar(50) = null,
	@COD_GERENCIA int = null,
	@NOMBRE_GERENCIA varchar(100) = null,
	@COD_TIPO_CONTRATO int = null,
	@NOMBRE_TIPO_CONTRATO varchar(100) = null,
	@COD_TIPO_DOCUMENTO int = null,
	@NUMERO_DOCUMENTO_EMPLEADO varchar(50) = null,
	@NOMBRE_EMPLEADO varchar(100) = null, 
	@JEFE_INMEDIATO varchar(100) = null,
	@COD_SOCIEDAD int = null,
	@NOMBRE_SOCIEDAD VARCHAR(100) = null,
	@COD_EQUIPO_VENTAS int = null,
	@NOMBRE_EQUIPO_VENTAS VARCHAR(100) = null,
	@COD_CIUDAD_TRABAJO INT = null,
	@NOMBRE_CIUDAD_TRABAJO varchar(50) = null,
	@COD_DANE_CIUDAD_TRABAJO INT = null,
	@COD_UBICACION_FISICA varchar(50) = null,
	@NOMBRE_UBICACION_FISICA varchar(50) = null,
	@COD_NIVEL_RIESGO_ARL int = null,
	@NIVEL_RIESGO_ARL VARCHAR(100) = null,
	@COD_CATEGORIA_ED int = null,
	@NOMBRE_CATEGORIA_ED VARCHAR(100) = null,
	@CARGO_CRITICO varchar(50)  = null,
	@COD_JORNADA_LABORAL int  = null,
	@NOMBRE_JORNADA_LABORAL VARCHAR(100)  = null,
	@HORARIO_LABORAL_DESDE varchar(50)  = null,
	@HORARIO_LABORAL_HASTA varchar(50)  = null,
	@COD_DIA_LABORAL_DESDE int = null,
	@COD_DIA_LABORAL_HASTA int = null,
	@POSICION varchar(50) = null,
	@EMPRESA_TEMPORAL VARCHAR(100) = null,
    @SALARIO_FIJO numeric(18,2) = null, 
	@PORCENTAJE_SALARIO_FIJO numeric(18,2) = null, 
	@SALARIO_VARIABLE numeric(18,2) = null, 
	@PORCENTAJE_SALARIO_VARIABLE numeric(18,2) = null, 
	@SOBREREMUNERACION numeric(18,2) = null, 
	@PORCENTAJE_SOBREREMUNERACION numeric(18,2) = null, 
	@EXTRA_FIJA numeric(18,2) = null, 
	@RECARGO_NOCTURNO numeric(18,2) = null, 
	@MEDIO_TRANSPORTE numeric(18,2) = null, 
	@SALARIO_TOTAL numeric(18,2) = null, 
	@BONO_ANUAL numeric(18,2) = null, 
	@NUMERO_SALARIOS int = null, 
	@MESES_GARANTIZADOS int = null, 
	@COD_TIPO_SALARIO int = null, 
	@NOMBRE_TIPO_SALARIO varchar(50) = null, 
	@FACTOR_PRESTACIONAL numeric(18,2) = null, 
	@INGRESO_PROM_MENSUAL numeric(18,2) = null, 
	@INGRESO_PROM_ANUAL numeric(18,2) = null, 
	@MERCADO varchar(100) = null, 
	@COD_CATEGORIA int = null, 
	@NOMBRE_CATEGORIA varchar(100) = null, 
	@PUNTO_MEDIO_80 numeric(18,2) = null, 
	@PUNTO_MEDIO_100 numeric(18,2) = null, 
	@PUNTO_MEDIO_120 numeric(18,2) = null, 
	@POSICIONAMIENTO numeric(18,2) = null
AS

BEGIN
	SET NOCOUNT ON;
	DECLARE @MSG_ERROR VARCHAR(MAX)

	BEGIN TRY
		BEGIN TRAN
			--Se realiza el update de la requisicion 
			UPDATE [REQUISICION].[REQUISICION]
			SET	COD_GERENCIA = ISNULL(COD_GERENCIA,@COD_GERENCIA), --Presupuestada
				NOMBRE_GERENCIA = ISNULL(NOMBRE_GERENCIA , @NOMBRE_GERENCIA),
				COD_TIPO_CONTRATO = ISNULL(COD_TIPO_CONTRATO , @COD_TIPO_CONTRATO),
				NOMBRE_TIPO_CONTRATO = ISNULL(NOMBRE_TIPO_CONTRATO , @NOMBRE_TIPO_CONTRATO),
				JEFE_INMEDIATO = ISNULL(JEFE_INMEDIATO , @JEFE_INMEDIATO),
				COD_CECO = ISNULL(COD_CECO , @COD_CECO),
				NOMBRE_CECO = ISNULL(NOMBRE_CECO , @NOMBRE_CECO),
				COD_SOCIEDAD = ISNULL(COD_SOCIEDAD , @COD_SOCIEDAD),
				NOMBRE_SOCIEDAD = ISNULL(NOMBRE_SOCIEDAD , @NOMBRE_SOCIEDAD),
				COD_EQUIPO_VENTAS = ISNULL(COD_EQUIPO_VENTAS , @COD_EQUIPO_VENTAS),
				NOMBRE_EQUIPO_VENTAS = ISNULL(NOMBRE_EQUIPO_VENTAS , @NOMBRE_EQUIPO_VENTAS),
				COD_CIUDAD_TRABAJO = ISNULL(COD_CIUDAD_TRABAJO , @COD_CIUDAD_TRABAJO),
				NOMBRE_CIUDAD_TRABAJO = ISNULL(NOMBRE_CIUDAD_TRABAJO , @NOMBRE_CIUDAD_TRABAJO),
				COD_UBICACION_FISICA = ISNULL(COD_UBICACION_FISICA , @COD_UBICACION_FISICA),
				NOMBRE_UBICACION_FISICA = ISNULL(NOMBRE_UBICACION_FISICA , @NOMBRE_UBICACION_FISICA),
				COD_NIVEL_RIESGO_ARL = ISNULL(COD_NIVEL_RIESGO_ARL , @COD_NIVEL_RIESGO_ARL),
				NIVEL_RIESGO_ARL = ISNULL(NIVEL_RIESGO_ARL , @NIVEL_RIESGO_ARL),
				COD_CATEGORIA_ED = ISNULL(COD_CATEGORIA_ED , @COD_CATEGORIA_ED),
				NOMBRE_CATEGORIA_ED = ISNULL(NOMBRE_CATEGORIA_ED , @NOMBRE_CATEGORIA_ED),
				CARGO_CRITICO = ISNULL(CARGO_CRITICO , @CARGO_CRITICO),
				COD_JORNADA_LABORAL = ISNULL(COD_JORNADA_LABORAL , @COD_JORNADA_LABORAL),
				NOMBRE_JORNADA_LABORAL = ISNULL(NOMBRE_JORNADA_LABORAL , @NOMBRE_JORNADA_LABORAL),
				HORARIO_LABORAL_DESDE = ISNULL(HORARIO_LABORAL_DESDE , @HORARIO_LABORAL_DESDE),
				HORARIO_LABORAL_HASTA = ISNULL(HORARIO_LABORAL_HASTA , @HORARIO_LABORAL_HASTA),
				COD_DIA_LABORAL_DESDE = ISNULL(COD_DIA_LABORAL_DESDE , @COD_DIA_LABORAL_DESDE),
				COD_DIA_LABORAL_HASTA = ISNULL(COD_DIA_LABORAL_HASTA , @COD_DIA_LABORAL_HASTA),
				SALARIO_FIJO = ISNULL(SALARIO_FIJO , @SALARIO_FIJO),
				PORCENTAJE_SALARIO_FIJO = ISNULL(PORCENTAJE_SALARIO_FIJO , @PORCENTAJE_SALARIO_FIJO),
				SALARIO_VARIABLE = ISNULL(SALARIO_VARIABLE , @SALARIO_VARIABLE),
				PORCENTAJE_SALARIO_VARIABLE = ISNULL(PORCENTAJE_SALARIO_VARIABLE , @PORCENTAJE_SALARIO_VARIABLE),
				SOBREREMUNERACION = ISNULL(SOBREREMUNERACION , @SOBREREMUNERACION),
				PORCENTAJE_SOBREREMUNERACION = ISNULL(PORCENTAJE_SOBREREMUNERACION , @PORCENTAJE_SOBREREMUNERACION),
				EXTRA_FIJA = ISNULL(EXTRA_FIJA , @EXTRA_FIJA),
				RECARGO_NOCTURNO = ISNULL(RECARGO_NOCTURNO , @RECARGO_NOCTURNO),
				MEDIO_TRANSPORTE = ISNULL(MEDIO_TRANSPORTE , @MEDIO_TRANSPORTE),
				SALARIO_TOTAL = ISNULL(SALARIO_TOTAL , @SALARIO_TOTAL),
				BONO_ANUAL = ISNULL(BONO_ANUAL , @BONO_ANUAL),
				NUMERO_SALARIOS = ISNULL(NUMERO_SALARIOS , @NUMERO_SALARIOS),
				MESES_GARANTIZADOS = ISNULL(MESES_GARANTIZADOS , @MESES_GARANTIZADOS),
				COD_TIPO_SALARIO = ISNULL(COD_TIPO_SALARIO , @COD_TIPO_SALARIO),
				NOMBRE_TIPO_SALARIO = ISNULL(NOMBRE_TIPO_SALARIO , @NOMBRE_TIPO_SALARIO),
				FACTOR_PRESTACIONAL = ISNULL(FACTOR_PRESTACIONAL , @FACTOR_PRESTACIONAL),
				INGRESO_PROM_MENSUAL = ISNULL(INGRESO_PROM_MENSUAL , @INGRESO_PROM_MENSUAL),
				INGRESO_PROM_ANUAL = ISNULL(INGRESO_PROM_ANUAL , @INGRESO_PROM_ANUAL),
				MERCADO = ISNULL(MERCADO , @MERCADO),
				COD_CATEGORIA = ISNULL(COD_CATEGORIA , @COD_CATEGORIA),
				POSICIONAMIENTO = ISNULL(POSICIONAMIENTO , @POSICIONAMIENTO),
				FECHA_INICIO = ISNULL(FECHA_INICIO , @FECHA_INICIO),
				FECHA_FIN = ISNULL(FECHA_FIN , @FECHA_FIN),
				ES_MODIFICACION = ISNULL(ES_MODIFICACION , @ES_MODIFICACION),
				COD_ESTADO_REQUISICION = ISNULL(COD_ESTADO_REQUISICION , @COD_ESTADO_REQUISICION),
				USUARIO_MODIFICACION = ISNULL(USUARIO_MODIFICACION , @USUARIO_MODIFICACION),
				FECHA_MODIFICACION = ISNULL(FECHA_MODIFICACION , GETDATE()),
				COD_TIPO_DOCUMENTO = ISNULL(COD_TIPO_DOCUMENTO , @COD_TIPO_DOCUMENTO),
				NUMERO_DOCUMENTO_EMPLEADO = ISNULL(NUMERO_DOCUMENTO_EMPLEADO , @NUMERO_DOCUMENTO_EMPLEADO),
				NOMBRE_EMPLEADO = ISNULL(NOMBRE_EMPLEADO , @NOMBRE_EMPLEADO),
				COD_DANE_CIUDAD_TRABAJO = ISNULL(COD_DANE_CIUDAD_TRABAJO , @COD_DANE_CIUDAD_TRABAJO),
				POSICION = ISNULL(POSICION , @POSICION),
				EMPRESA_TEMPORAL = ISNULL(EMPRESA_TEMPORAL , @EMPRESA_TEMPORAL),
				@NOMBRE_CATEGORIA = ISNULL(@NOMBRE_CATEGORIA , @NOMBRE_CATEGORIA),
				PUNTO_MEDIO_80 = ISNULL(PUNTO_MEDIO_80 , @PUNTO_MEDIO_80),
				PUNTO_MEDIO_100 = ISNULL(PUNTO_MEDIO_100 , @PUNTO_MEDIO_100),
				PUNTO_MEDIO_120 = ISNULL(PUNTO_MEDIO_120 , @PUNTO_MEDIO_120)

			WHERE COD_REQUISICION = @COD_REQUISICION
				
			INSERT INTO [REQUISICION].[HISTORICO]  (COD_REQUISICION,COD_ROL
														,COD_NIVEL_RIESGO_ARL,COD_CATEGORIA_ED
														,CARGO_CRITICO,COD_JORNADA_LABORAL
														,HORARIO_LABORAL_DESDE,HORARIO_LABORAL_HASTA
														,COD_DIA_LABORAL_DESDE,COD_DIA_LABORAL_HASTA
														,SALARIO_FIJO,PORCENTAJE_SALARIO_FIJO
														,SALARIO_VARIABLE,PORCENTAJE_SALARIO_VARIABLE
														,SOBREREMUNERACION,PORCENTAJE_SOBREREMUNERACION
														,EXTRA_FIJA,RECARGO_NOCTURNO
														,MEDIO_TRANSPORTE,SALARIO_TOTAL
														,BONO_ANUAL,NUMERO_SALARIOS
														,MESES_GARANTIZADOS,COD_TIPO_SALARIO
														,FACTOR_PRESTACIONAL,INGRESO_PROM_ANUAL
														,INGRESO_PROM_MENSUAL,MERCADO
														,COD_CATEGORIA,PUNTO_MEDIO_100
														,PUNTO_MEDIO_120,PUNTO_MEDIO_80
														,POSICIONAMIENTO,USUARIO_REGISTRO
														,FECHA_REGISTRO,COD_ESTADO)
			VALUES (@COD_REQUISICION,1 
					,@COD_NIVEL_RIESGO_ARL,@COD_CATEGORIA_ED
					,@CARGO_CRITICO,@COD_JORNADA_LABORAL
					,@HORARIO_LABORAL_DESDE,@HORARIO_LABORAL_HASTA
					,@COD_DIA_LABORAL_DESDE,@COD_DIA_LABORAL_HASTA
					,@SALARIO_FIJO,@PORCENTAJE_SALARIO_FIJO
					,@SALARIO_VARIABLE,@PORCENTAJE_SALARIO_VARIABLE
					,@SOBREREMUNERACION,@PORCENTAJE_SOBREREMUNERACION
					,@EXTRA_FIJA,@RECARGO_NOCTURNO
					,@MEDIO_TRANSPORTE,@SALARIO_TOTAL
					,@BONO_ANUAL,@NUMERO_SALARIOS
					,@MESES_GARANTIZADOS,@COD_TIPO_SALARIO
					,@FACTOR_PRESTACIONAL,@INGRESO_PROM_MENSUAL
					,@INGRESO_PROM_ANUAL,@MERCADO
					,@COD_CATEGORIA,@PUNTO_MEDIO_100							
					,@PUNTO_MEDIO_120,@PUNTO_MEDIO_80
					,@POSICIONAMIENTO,@USUARIO_MODIFICACION
					,GETDATE() 
					,1)
		COMMIT 
	END TRY

	BEGIN CATCH
		ROLLBACK
		SET @MSG_ERROR = ERROR_MESSAGE()
		RAISERROR('SE HA PRODUCIDO UN ERROR: %s',16,1,@MSG_ERROR)
	END CATCH
END
GO
/****** Object:  StoredProcedure [REQUISICION].[APROBAR_REQUISICION]    Script Date: 21/05/2019 5:18:13 p. m. ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Claro Colombia (Silvia Roa P.)
-- Create date: 09/05/2019
-- Description:	APROBAR UNA REQUISICION
-- =============================================
ALTER PROCEDURE [REQUISICION].[APROBAR_REQUISICION] 
     @ID_USUARIO VARCHAR(256),
	 @COD_REQUISICION int

AS
	
BEGIN
	SET NOCOUNT ON;
	DECLARE @MSG_ERROR VARCHAR(MAX)
	DECLARE @SIGUIENTE_ESTADO AS int
	DECLARE @USUARIO varchar(50)  
	DECLARE @ROL_APROBADOR int

	BEGIN TRY

	SELECT  @USUARIO=u.UserName,@ROL_APROBADOR=r.name
	   FROM [dbo].[AspNetUserRoles] ur
	   INNER JOIN [dbo].[AspNetUsers] u on u.id=ur.UserId
	   INNER JOIN [dbo].[AspNetRoles] r  on ur.RoleId = r.id
	   where u.id=@ID_USUARIO
		
		IF @ROL_APROBADOR ='Controller'
			BEGIN 
				SET @SIGUIENTE_ESTADO = 2 --APROBADO CONTROLLER
			END

		ELSE IF @ROL_APROBADOR ='RRHH'
			BEGIN
				SET @SIGUIENTE_ESTADO = 5 --APROBADO RRHH
			END

		ELSE IF @ROL_APROBADOR = 'USC'
			BEGIN
				SET @SIGUIENTE_ESTADO = 7 --APROBADO USC
			END			
	
		ELSE IF @ROL_APROBADOR = 'BP'
			BEGIN
				SET @SIGUIENTE_ESTADO = 4 --VERIFICADO BP
			END	

		BEGIN TRAN
			UPDATE [REQUISICION].[REQUISICION] 
			SET COD_ESTADO_REQUISICION = @SIGUIENTE_ESTADO,
				USUARIO_MODIFICACION = @USUARIO,
				FECHA_MODIFICACION = GETDATE()
			WHERE COD_REQUISICION = @COD_REQUISICION
			
			INSERT INTO [REQUISICION].[HISTORICO] (COD_REQUISICION, COD_ROL, USUARIO_REGISTRO, FECHA_REGISTRO, COD_ESTADO)
			VALUES (@COD_REQUISICION, @ROL_APROBADOR, @USUARIO, GETDATE(), @SIGUIENTE_ESTADO)			
		COMMIT 
	END TRY

	BEGIN CATCH
		SET @MSG_ERROR = ERROR_MESSAGE()
		RAISERROR('SE HA PRODUCIDO UN ERROR: %s',16,1,@MSG_ERROR)
	END CATCH					
END

/****** Object:  StoredProcedure [RETIROS].[ACTUALIZAR_SOPORTE]    Script Date: 05/20/2019 10:36:33 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROCEDURE [RETIROS].[ACTUALIZAR_SOPORTE]
 @COD_SOPORTE numeric(18, 0),
 @COD_RETIRO numeric(18, 0),
 @COD_TIPO_SOPORTE numeric(18, 0),
 @RUTA_SOPORTE nvarchar(MAX),
 @NOMBRE_SOPORTE nvarchar(200),
 @TAMANO  nvarchar(10),
 @APROBADO bit,
 @ESTADO numeric(1,0),
 @COD_USUARIO_CREA nvarchar(128),
 @FECHA_CREA datetime,
 @COD_USUARIO_MODIFICA nvarchar(128),
 @FECHA_MODIFICA datetime
AS
BEGIN
    UPDATE RETIROS.SOPORTES
	      SET RUTA_SOPORTE = @RUTA_SOPORTE, 
			NOMBRE_SOPORTE = @NOMBRE_SOPORTE,
			COD_USUARIO_MODIFICA = @COD_USUARIO_MODIFICA, 
			TAMANO = @TAMANO, 
			FECHA_MODIFICA = GETDATE()
			WHERE COD_SOPORTE = @COD_SOPORTE; 
			
			SELECT * FROM RETIROS.SOPORTES WHERE COD_SOPORTE = @COD_SOPORTE; 
END
GO
/****** Object:  StoredProcedure [RETIROS].[ACTUALIZAR_RETIRO_POR_COD_CAUSA_RETIRO]    Script Date: 05/20/2019 10:36:33 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Julio Fuentes>
-- Create date: <08/03/2019>
-- Description:	<ACTUALIZA EL COD CAUSA RETIRO Y EL MONBRE SI EL USUSARIO CAMBIA DE CAUSA RETIRO, ELIMINA DA LA TABLA SOPORTES EL REGISTRO DEL SOPORTE QUE ESTE ASOCIADO AL COD_RETIRO >
-- =============================================
CREATE  PROCEDURE [RETIROS].[ACTUALIZAR_RETIRO_POR_COD_CAUSA_RETIRO] -- RETIROS.ACTUALIZAR_RETIRO_POR_COD_CAUSA_RETIRO 
 @COD_RETIRO numeric(18, 0),
 @COD_CAUSA_RETIRO numeric(18, 0),
 @NOMBRE_CAUSA_RETIRO nvarchar(100),
 @COD_USUARIO_MODIFICA nvarchar(128)
AS

BEGIN
  SET NOCOUNT ON;
  BEGIN TRY    
       
       BEGIN TRAN 

     UPDATE RETIROS.RETIROS
	      SET				
				COD_CAUSA_RETIRO=@COD_CAUSA_RETIRO,
				NOMBRE_CAUSA_RETIRO=@NOMBRE_CAUSA_RETIRO,			
				COD_USUARIO_MODIFICA= @COD_USUARIO_MODIFICA,
				FECHA_MODIFICA= GETDATE()				
         WHERE COD_RETIRO= @COD_RETIRO
			
		 DELETE FROM RETIROS.SOPORTES  where COD_RETIRO=@COD_RETIRO		
				
		 SELECT * FROM RETIROS.RETIROS WHERE COD_RETIRO = @COD_RETIRO; 


       COMMIT  TRAN        
       
       END TRY
       BEGIN CATCH

       rollback 

  select 'Error'ERROR
       END CATCH    
       
END
GO

