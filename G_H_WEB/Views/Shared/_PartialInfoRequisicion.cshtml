@using UTILS.Settings
@{
    List<SelectListItem> _BUSCAR_USUARIOS = ViewBag.Busca_USUARIOS;
    string deshabilitar = "true";
    List<SelectListItem> _BUSCAR_NOMBRE_CECO = Model.LIST_NOMBRE_CECO;
}
@model MODELO_DATOS.MODELO_REQUISICION.REQUISICIONViewModel
<section id="Requisicion">
    <div class="panel-heading row">
        @if (User.IsInRole(SettingsManager.PerfilJefe) || User.IsInRole(SettingsManager.PerfilController))
        {
            <div class="span-icon-arrow div-span-collapse2">
                <span class="span-collapse"><i class="fas fa-chevron-up arrow-collapse"></i></span>
            </div>
        }
        else
        {
            <div class="span-icon-arrow div-span-collapse2">
                <span class="span-collapse"><i class="fas fa-chevron-down arrow-collapse"></i></span>
            </div>
        }
        <a class="a-collapse" data-toggle="collapse" href="#collapse2">
            <h2>Información Empleado</h2>
        </a>
    </div>
    <div id="collapse2" class="panel-collapse collapse">
        <div class="row">
            @Html.HiddenFor(model => model.COD_REQUISICION)
            @Html.HiddenFor(model => model.COD_ESTADO_REQUISICION)



            @if (User.IsInRole(SettingsManager.PerfilJefe))
            {
                <div class="form-group col-md-6 col-sm-12">
                    @Html.LabelFor(model => model.LIST_NOMBRE_TIPO_NECESIDAD, new { @class = "letrasFormulario" })
                    @Html.DropDownListFor(model => model.COD_TIPO_NECESIDAD, new SelectList(Model.LIST_NOMBRE_TIPO_NECESIDAD, "Value", "Text", Model.COD_TIPO_NECESIDAD), "Seleccione tipo necesidad", new { @class = "form-control deplegablesIniciales letrasFormulario control_mediano" })
                    @Html.ValidationMessageFor(model => model.COD_TIPO_NECESIDAD)
                </div>

                <div class="form-group col-md-6 col-sm-12">
                    @Html.LabelFor(model => model.LIST_NOMBRE_CARGO, new { @class = "letrasFormulario" })
                    @Html.DropDownListFor(model => model.COD_CARGO, new SelectList(Model.LIST_NOMBRE_CARGO, "Value", "Text", Model.COD_CARGO), "Seleccione el cargo", new { @class = "form-control deplegablesIniciales letrasFormulario control_mediano" })
                    @Html.ValidationMessageFor(model => model.COD_CARGO)
                </div>

            }
            else
            {
                <div class="form-group col-md-6 col-sm-12">
                    @Html.LabelFor(model => model.LIST_NOMBRE_TIPO_NECESIDAD, new { @class = "letrasFormulario" })
                    @Html.DropDownListFor(model => model.COD_TIPO_NECESIDAD, new SelectList(Model.LIST_NOMBRE_TIPO_NECESIDAD, "Value", "Text", Model.COD_TIPO_NECESIDAD), "Seleccione tipo necesidad", new { @class = "form-control deplegablesIniciales letrasFormulario control_mediano", disabled = deshabilitar })
                    @Html.HiddenFor(model => model.COD_TIPO_NECESIDAD)
                    @Html.ValidationMessageFor(model => model.COD_TIPO_NECESIDAD)
                </div>

                <div class="form-group col-md-6 col-sm-12">
                    @Html.LabelFor(model => model.LIST_NOMBRE_CARGO, new { @class = "letrasFormulario" })
                    @Html.DropDownListFor(model => model.COD_CARGO, new SelectList(Model.LIST_NOMBRE_CARGO, "Value", "Text", Model.COD_CARGO), "Seleccione el cargo", new { @class = "form-control deplegablesIniciales letrasFormulario control_mediano", disabled = deshabilitar })
                    @Html.HiddenFor(model => model.COD_CARGO)
                    @Html.ValidationMessageFor(model => model.COD_CARGO)
                </div>

            }

        </div>

        <div class="row">

            @if (User.IsInRole(SettingsManager.PerfilJefe))
            {
                <div class="form-group col-md-6 col-sm-12">
                    @Html.LabelFor(model => model.ORDEN, new { @class = "letrasFormulario" })
                    @Html.TextBoxFor(model => model.ORDEN, new { @class = "form-control TexboxIncicial control_mediano", @placeholder = "Escriba el orden" })
                    @Html.ValidationMessageFor(model => model.ORDEN)
                </div>

                <div class="form-group col-md-6 col-sm-12 buscadorC">
                    @Html.LabelFor(model => model.COD_CECO, new { @class = "letrasFormulario" })
                    @*<br />*@
                    @if (Model.NOMBRE_CECO == null && Model.COD_CECO == 0)
                    {
                        @Html.TextBoxFor(model => model.NOMBRE_CECO, new { @class = "buscador_ceco letrasFormulario control_mediano", placeholder = "Escriba el centro de costo", onkeyup = "buscarFiltro(this.value)", autocomplete = "off" })
                        @Html.HiddenFor(model => model.COD_CECO)
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.NOMBRE_CECO, new { @class = "buscador_ceco letrasFormulario control_mediano", placeholder = "Escriba el centro de costo", onkeyup = "buscarFiltro(this.value)", autocomplete = "off" })
                        @Html.HiddenFor(model => model.COD_CECO)
                    }
                    <br>
                    <ul class="list-group buscador_modificaciones_deplegable_esconder" id="myListCeco" style="margin-bottom: 0px !important">
                        @foreach (SelectListItem item in _BUSCAR_NOMBRE_CECO)
                        {
                            <li class="list-group-item item_lista_modificar letrasFormulario" onclick="AgarrarValorFiltroCeco('@item.Text','@item.Value')">@item.Text</li>
                        }
                    </ul>
                    @Html.ValidationMessageFor(model => model.NOMBRE_CECO, "", new { id = "span-message" })
                </div>
            }
            else
            {
                <div class="form-group col-md-6 col-sm-12">
                    @Html.LabelFor(model => model.ORDEN, new { @class = "letrasFormulario" })
                    @Html.TextBoxFor(model => model.ORDEN, new { @class = "form-control TexboxIncicial control_mediano", disabled = deshabilitar, @placeholder = "Escriba el orden" })
                    @Html.HiddenFor(model => model.ORDEN)
                    @Html.ValidationMessageFor(model => model.ORDEN)
                </div>

                <div class="form-group col-md-6 col-sm-12">
                    @Html.LabelFor(model => model.COD_CECO, new { @class = "letrasFormulario" })
                    @Html.DropDownListFor(model => model.COD_CECO, new SelectList(Model.LIST_NOMBRE_CECO, "Value", "Text", Model.COD_CECO), "Seleccione centro de costo", new { @class = "form-control deplegablesIniciales letrasFormulario control_mediano", disabled = deshabilitar })
                    @Html.HiddenFor(model => model.COD_CECO)
                    @Html.ValidationMessageFor(model => model.COD_CECO)
                </div>
            }

            @Html.HiddenFor(x => x.COD_REQUISICION)

            @if (User.IsInRole(SettingsManager.PerfilJefe))
            {

                <div class="form-group col-md-12 col-sm-12">
                    @Html.CheckBoxFor(model => model.ES_MODIFICACION, new { @class = "CH_ESMODIFICACION radioButton" })
                    @Html.LabelFor(model => model.ES_MODIFICACION, new { @class = "letrasFormulario posicionCheck" })

                    <span></span>
                </div>
                <div class="form-group col-md-12 col-sm-12 buscadorR">
                    <input class="buscador_modificaciones letrasFormulario control_grande" id="buscador_modificaciones" type="text" placeholder="Escriba el N° de documento o nombre del empleado">
                    <br>
                    <ul class="list-group buscador_modificaciones_deplegable_esconder" id="myList">
                        @foreach (SelectListItem item in _BUSCAR_USUARIOS)
                        {
                            <li class="list-group-item item_lista_modificar letrasFormulario" onclick="AgarrarValorFiltro('@item.Text','@item.Value')">@item.Text<br /> @item.Value</li>
                        }

                    </ul>
                    <div class="row">
                        <div class="form-group col-md-6 col-sm-6">
                            @Html.LabelFor(model => model.NOMBRE_EMPLEADO, new { @class = "letrasFormulario" })
                            @Html.TextBoxFor(model => model.NOMBRE_EMPLEADO, new { @class = "form-control TexboxIncicial letrasFormulario control_mediano", disabled = deshabilitar })
                            @Html.ValidationMessageFor(model => model.NOMBRE_EMPLEADO)
                            @Html.HiddenFor(model => model.NOMBRE_EMPLEADO, new { @class = "HD_NOMBRE_EMPLEADO" })
                        </div>

                        <div class="form-group col-md-6 col-sm-6">
                            @Html.LabelFor(model => model.NUMERO_DOCUMENTO_EMPLEADO, new { @class = "letrasFormulario" })
                            @Html.TextBoxFor(model => model.NUMERO_DOCUMENTO_EMPLEADO, new { @class = "form-control TexboxIncicial letrasFormulario control_mediano", disabled = deshabilitar })
                            @Html.ValidationMessageFor(model => model.NUMERO_DOCUMENTO_EMPLEADO)
                            @Html.HiddenFor(model => model.NUMERO_DOCUMENTO_EMPLEADO, new { @class = "HD_NUMERO_DOCUMENTO_EMPLEADO" })
                        </div>

                    </div>

                </div>
            }
            else
            {
                if (Model.ES_MODIFICACION)
                {
                    <div class="form-group col-md-12 col-sm-12">
                        @Html.CheckBoxFor(model => model.ES_MODIFICACION, new { htmlAttributes = new { @class = "CH_ESMODIFICACION radioButton" }, disabled = deshabilitar })
                        @Html.LabelFor(model => model.ES_MODIFICACION, new { @class = "letrasFormulario posicionCheck" })

                        <span></span>
                    </div>

                    <div class="form-group col-md-12 col-sm-12">
                        <div class="row">
                            <div class="form-group col-md-6 col-sm-12">
                                @Html.LabelFor(model => model.NOMBRE_EMPLEADO, new { @class = "letrasFormulario" })
                                @Html.TextBoxFor(model => model.NOMBRE_EMPLEADO, new { @class = "form-control TexboxIncicial letrasFormulario control_mediano", disabled = deshabilitar })
                                @Html.ValidationMessageFor(model => model.NOMBRE_EMPLEADO)
                            </div>

                            <div class="form-group col-md-6 col-sm-12">
                                @Html.LabelFor(model => model.NUMERO_DOCUMENTO_EMPLEADO, new { @class = "letrasFormulario" })
                                @Html.TextBoxFor(model => model.NUMERO_DOCUMENTO_EMPLEADO, new { @class = "form-control TexboxIncicial letrasFormulario control_mediano", disabled = deshabilitar })
                                @Html.ValidationMessageFor(model => model.NUMERO_DOCUMENTO_EMPLEADO)
                            </div>

                        </div>

                    </div>
                }
            }

        </div>
    </div>
</section>

<style>
    .list-group-item {
        cursor: pointer;
    }
</style>
<script>
    $(document).ready(function () {
        if ("@Model.ES_MODIFICACION" === "True") {
            $(".buscadorR").css("display", "block");
        } else {
            $(".buscadorR").css("display", "none");
        }

        $("#ES_MODIFICACION").click(function () {
            if ($("#ES_MODIFICACION").is(':checked')) {
                $(".buscadorR").css("display", "block");
            } else {
                $(".buscadorR").css("display", "none");
                $("#NOMBRE_EMPLEADO").val("");
                $("#NUMERO_DOCUMENTO_EMPLEADO").val("");
            }
        });


        $("#buscador_modificaciones").keyup(function () {
            var value = $("#buscador_modificaciones").val().toLowerCase();
            $("#myList li").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });

        $("#collapse2").on("hide.bs.collapse", function () {
            $(".div-span-collapse2").html('<span class="span-collapse"><i class="fas fa-chevron-down arrow-collapse"></i></span>');
        });
        $("#collapse2").on("show.bs.collapse", function () {
            $(".div-span-collapse2").html('<span class="span-collapse"><i class="fas fa-chevron-up arrow-collapse"></i></span>');
        });

        var perfilJefe = "@User.IsInRole(SettingsManager.PerfilJefe).ToString()";
        var perfilController = "@User.IsInRole(SettingsManager.PerfilController).ToString()";
        if (perfilJefe.toString() == "True" || perfilController.toString() == "True")
        {
            $("#collapse2").addClass('show');
        }
    });

    function buscarFiltro(value) {
        //var value = $("#input_ceco").val().toLowerCase();
        $("#myListCeco li").filter(function () {
            $(this).toggle($(this).text().toLowerCase().indexOf(value.toLowerCase()) > -1)
        });
    }

    var validateForm = function () {
        if ($('#COD_TIPO_NECESIDAD').val() == "" && $('#COD_CARGO').val() == "" && $('#ORDEN').val() == "") {
            validate = false;
            if ($('#ES_MODIFICACION')[0].checked) {
                if ($('#NOMBRE_EMPLEADO').val() == "" && $('#NUMERO_DOCUMENTO_EMPLEADO').val() == "") {
                    validate = false;
                } else {
                    validate = true;
                }
            }
        } else {
            validate = true;
        }
        console.log('validate ', validate);
        return validate;
    }

    function AgarrarValorFiltro(texto, valor) {
        $("#NOMBRE_EMPLEADO").val(texto);
        $("#NUMERO_DOCUMENTO_EMPLEADO").val(valor);
        $(".HD_NOMBRE_EMPLEADO").val(texto);
        $(".HD_NUMERO_DOCUMENTO_EMPLEADO").val(valor);
        $("#myList").removeClass("buscador_modificaciones_deplegable").addClass("buscador_modificaciones_deplegable_esconder");
    }

    function AgarrarValorFiltroCeco(texto, valor) {
        $("#span-message").html("");
        $("#span-message").removeClass("field-validation-error").addClass("field-validation-valid");
        $("#NOMBRE_CECO").val(texto);
        $("#COD_CECO").val(valor);
        $("#myListCeco").removeClass("buscador_modificaciones_deplegable_ceco").addClass("buscador_modificaciones_deplegable_esconder");
    }

    $(".buscadorR").focusin(function () {
        $("#myList").removeClass("buscador_modificaciones_deplegable_esconder").addClass("buscador_modificaciones_deplegable");
    });

    $(".buscadorC").focusin(function () {
        $("#span-message").html("");
        $("#myListCeco").removeClass("buscador_modificaciones_deplegable_esconder").addClass("buscador_modificaciones_deplegable_ceco");
    });

</script>
