@model MODELO_DATOS.MODELO_REQUISICION.REQUISICIONViewModel
@using MODELO_DATOS.MODELO_REQUISICION.LISTAS_API
@using UTILS.Settings
@{
    List<EMPLEADOS> _BUSCAR_USUARIOS = ViewBag.Busca_USUARIOS;
    string deshabilitar = "true";
}

<section id="Requisicion">

    @Html.HiddenFor(model => model.COD_REQUISICION)
    @Html.HiddenFor(model => model.COD_ESTADO_REQUISICION)

    <div class="panel-heading row">
        @if (User.IsInRole(SettingsManager.PerfilJefe) || User.IsInRole(SettingsManager.PerfilController))
        {
            <div class="span-icon-arrow div-span-collapseInfoGeneralLic">
                <span class="span-collapse"><i class="fas fa-chevron-up arrow-collapse"></i></span>
            </div>
        }
        else
        {
            <div class="span-icon-arrow div-span-collapseInfoGeneralLic">
                <span class="span-collapse"><i class="fas fa-chevron-down arrow-collapse"></i></span>
            </div>
        }
        <a class="a-collapse" data-toggle="collapse" href="#collapseInfoGeneralLic">
            <h2>Información Empleado</h2>
        </a>
    </div>
    <div id="collapseInfoGeneralLic" class="panel-collapse collapse">

        <div class="form-group col-md-12 col-sm-12 buscadorR">

            @if (User.IsInRole(SettingsManager.PerfilJefe))
            {
                <input class="buscador_modificaciones letrasFormulario" id="buscador_modificaciones" type="text" placeholder="  N° de documento o nombre del empleado">
                <br>
                <ul class="list-group buscador_modificaciones_deplegable_esconder" id="myList">
                    @foreach (EMPLEADOS item in _BUSCAR_USUARIOS)
                    {
                        <li class="list-group-item item_lista_modificar letrasFormulario" onclick="AgarrarValorFiltro('@item.NOMBRES','@item.TIPO_DOCUMENTO','@item.DOCUMENTO_NUMERO', '@item.COD_TIPO_DOCUMENTO')">@item.NOMBRES<br /> @item.TIPO_DOCUMENTO . @item.DOCUMENTO_NUMERO</li>
                    }

                </ul>
            }
            <div class="row">

                <div class="form-group col-md-6 col-sm-6">
                    @Html.LabelFor(model => model.NOMBRE_TIPO_DOCUMENTO, new { @class = "letrasFormulario" })
                    @Html.TextBoxFor(model => model.NOMBRE_TIPO_DOCUMENTO, new { @class = "form-control TexboxIncicial letrasFormulario", disabled = deshabilitar })
                    @Html.HiddenFor(model => model.COD_TIPO_DOCUMENTO, new { @id = "hdCOD_TIPO_DOCUMENTO" })
                    @Html.ValidationMessageFor(model => model.NOMBRE_TIPO_DOCUMENTO)
                </div>

                <div class="form-group col-md-6 col-sm-6">
                    @Html.LabelFor(model => model.NUMERO_DOCUMENTO_EMPLEADO, new { @class = "letrasFormulario" })
                    @Html.TextBoxFor(model => model.NUMERO_DOCUMENTO_EMPLEADO, new { @class = "form-control TexboxIncicial letrasFormulario", disabled = deshabilitar })
                    @Html.HiddenFor(model => model.NUMERO_DOCUMENTO_EMPLEADO, new { @id = "hdNUMERO_DOCUMENTO_EMPLEADO" })
                    @Html.ValidationMessageFor(model => model.NUMERO_DOCUMENTO_EMPLEADO)
                </div>

                <div class="form-group col-md-6 col-sm-6">
                    @Html.LabelFor(model => model.NOMBRE_EMPLEADO, new { @class = "letrasFormulario" })
                    @Html.TextBoxFor(model => model.NOMBRE_EMPLEADO, new { @class = "form-control TexboxIncicial letrasFormulario", disabled = deshabilitar })
                    @Html.HiddenFor(model => model.NOMBRE_EMPLEADO, new { @id = "hdNOMBRE_EMPLEADO" })
                    @Html.ValidationMessageFor(model => model.NOMBRE_EMPLEADO)
                </div>
            </div>
        </div>

        @if (User.IsInRole(SettingsManager.PerfilJefe))
        {
            <div class="row">
                <div class="form-group col-md-6 col-sm-12">
                    @Html.LabelFor(model => model.FECHA_INICIO, new { @class = "letrasFormulario" })
                    <div class="input-group date datepicker-retiro">
                        @Html.EditorFor(model => model.FECHA_INICIO, new { htmlAttributes = new { @class = "form-control datepicker letrasFormulario", placeholder = "Desde", @Value = Model.FECHA_INICIO.Year.Equals(1) ? DateTime.Now.ToShortDateString() : Model.FECHA_INICIO.ToShortDateString() } })
                        <span class="input-group-addon">
                            <span class="fas fa-calendar-alt" style="pointer-events:none">
                            </span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.FECHA_INICIO)
                </div>
                <div class="form-group col-md-6 col-sm-12">
                    @Html.LabelFor(model => model.FECHA_FIN, new { @class = "letrasFormulario" })
                    <div class="input-group date datepicker-retiro">
                        @Html.EditorFor(model => model.FECHA_FIN, new { htmlAttributes = new { @class = "form-control datepicker letrasFormulario", placeholder = "Hasta", @Value = Model.FECHA_FIN.Year.Equals(1) ? DateTime.Now.ToShortDateString() : Model.FECHA_FIN.ToShortDateString() } })
                        <span class="input-group-addon">
                            <span class="fas fa-calendar-alt" style="pointer-events:none">
                            </span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.FECHA_FIN)
                </div>
            </div>
        }
        else
        {

            <div class="row">
                <div class="form-group col-md-6 col-sm-12">
                    @Html.LabelFor(model => model.FECHA_INICIO, new { @class = "letrasFormulario" })
                    <div class="input-group date datepicker-retiro">
                        @Html.EditorFor(model => model.FECHA_INICIO, new { htmlAttributes = new { @class = "form-control datepicker letrasFormulario", placeholder = "Desde", @Value = Model.FECHA_INICIO.Year.Equals(1) ? DateTime.Now.ToShortDateString() : Model.FECHA_INICIO.ToShortDateString(), disabled = deshabilitar } })
                        <span class="input-group-addon">
                            <span class="fas fa-calendar-alt" style="pointer-events:none">
                            </span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.FECHA_INICIO)
                    @Html.HiddenFor(model => model.FECHA_INICIO)
                </div>
                <div class="form-group col-md-6 col-sm-12">
                    @Html.LabelFor(model => model.FECHA_FIN, new { @class = "letrasFormulario" })
                    <div class="input-group date datepicker-retiro">
                        @Html.EditorFor(model => model.FECHA_FIN, new { htmlAttributes = new { @class = "form-control datepicker letrasFormulario", placeholder = "Hasta", @Value = Model.FECHA_FIN.Year.Equals(1) ? DateTime.Now.ToShortDateString() : Model.FECHA_FIN.ToShortDateString(), disabled = deshabilitar } })
                        <span class="input-group-addon">
                            <span class="fas fa-calendar-alt" style="pointer-events:none">
                            </span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.FECHA_FIN)
                    @Html.HiddenFor(model => model.FECHA_FIN)
                </div>
            </div>

        }
    </div>
</section>
<style>
    .list-group-item {
        cursor: pointer;
    }
</style>
<script>

    $(".buscador_modificaciones").keyup(function () {
        var value = $("#buscador_modificaciones").val().toLowerCase();
        $("#myList li").filter(function () {
            $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
        });
    });
    function AgarrarValorFiltro(NOMBRES, TIPO_DOCUMENTO, DOCUMENTO_NUMERO, COD_TIPO_DOCUMENTO) {
        $("#NOMBRE_EMPLEADO").val(NOMBRES);
        $("#NUMERO_DOCUMENTO_EMPLEADO").val(DOCUMENTO_NUMERO);
        $("#NOMBRE_TIPO_DOCUMENTO").val(TIPO_DOCUMENTO);
        $("#hdCOD_TIPO_DOCUMENTO").val(COD_TIPO_DOCUMENTO);
        $("#hdNUMERO_DOCUMENTO_EMPLEADO").val(DOCUMENTO_NUMERO);
        $("#hdNOMBRE_EMPLEADO").val(NOMBRES);
        $("#myList").removeClass("buscador_modificaciones_deplegable").addClass("buscador_modificaciones_deplegable_esconder");
        CONSULTA_PUESTO_POR_CEDULA(DOCUMENTO_NUMERO);
    }

    $(".buscadorR").focusin(function () {
        $("#myList").removeClass("buscador_modificaciones_deplegable_esconder").addClass("buscador_modificaciones_deplegable");
    });

    $("#collapseInfoGeneralLic").on("hide.bs.collapse", function () {
        $(".div-span-collapseInfoGeneralLic").html('<span class="span-collapse"><i class="fas fa-chevron-down arrow-collapse"></i></span>');
    });
    $("#collapseInfoGeneralLic").on("show.bs.collapse", function () {
        $(".div-span-collapseInfoGeneralLic").html('<span class="span-collapse"><i class="fas fa-chevron-up arrow-collapse"></i></span>');
    });
    
    var perfilJefe = "@User.IsInRole(SettingsManager.PerfilJefe).ToString()";
    var perfilController = "@User.IsInRole(SettingsManager.PerfilController).ToString()";
    if (perfilJefe.toString() == "True" || perfilController.toString() == "True")
    {
        $("#collapseInfoGeneralLic").addClass('show');
    }
</script>